// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IpamsvcIgnoreItem IgnoreItem
//
// An Ignore Item object (_dhcp/ignore_item_) represents an item in a DHCP ignore list.
//
// swagger:model ipamsvcIgnoreItem
type IpamsvcIgnoreItem struct {

	// Type of ignore matching: client to ignore by client identifier (client hex or client text) or hardware to ignore by hardware identifier (MAC address). It can have one of the following values:
	//  * _client_hex_,
	//  * _client_text_,
	//  * _hardware_.
	// Required: true
	Type *string `json:"type,omitempty"`

	// Value to match.
	// Required: true
	Value *string `json:"value,omitempty"`
}

// Validate validates this ipamsvc ignore item
func (m *IpamsvcIgnoreItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IpamsvcIgnoreItem) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *IpamsvcIgnoreItem) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ipamsvc ignore item based on context it is used
func (m *IpamsvcIgnoreItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IpamsvcIgnoreItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IpamsvcIgnoreItem) UnmarshalBinary(b []byte) error {
	var res IpamsvcIgnoreItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
