/*
Host Activation Service

Host activation service provides a RESTful interface to manage cert and join token object. Join tokens are essentially a password that allows on-prem hosts to auto-associate themselves to a customer's account and receive a signed cert.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infraprovision

import (
	"encoding/json"
)

// checks if the DenyCSRRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DenyCSRRequest{}

// DenyCSRRequest struct for DenyCSRRequest
type DenyCSRRequest struct {
	ActivationCode *string `json:"activation_code,omitempty"`
}

// NewDenyCSRRequest instantiates a new DenyCSRRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDenyCSRRequest() *DenyCSRRequest {
	this := DenyCSRRequest{}
	return &this
}

// NewDenyCSRRequestWithDefaults instantiates a new DenyCSRRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDenyCSRRequestWithDefaults() *DenyCSRRequest {
	this := DenyCSRRequest{}
	return &this
}

// GetActivationCode returns the ActivationCode field value if set, zero value otherwise.
func (o *DenyCSRRequest) GetActivationCode() string {
	if o == nil || IsNil(o.ActivationCode) {
		var ret string
		return ret
	}
	return *o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DenyCSRRequest) GetActivationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return o.ActivationCode, true
}

// HasActivationCode returns a boolean if a field has been set.
func (o *DenyCSRRequest) HasActivationCode() bool {
	if o != nil && !IsNil(o.ActivationCode) {
		return true
	}

	return false
}

// SetActivationCode gets a reference to the given string and assigns it to the ActivationCode field.
func (o *DenyCSRRequest) SetActivationCode(v string) {
	o.ActivationCode = &v
}

func (o DenyCSRRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DenyCSRRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationCode) {
		toSerialize["activation_code"] = o.ActivationCode
	}
	return toSerialize, nil
}

type NullableDenyCSRRequest struct {
	value *DenyCSRRequest
	isSet bool
}

func (v NullableDenyCSRRequest) Get() *DenyCSRRequest {
	return v.value
}

func (v *NullableDenyCSRRequest) Set(val *DenyCSRRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDenyCSRRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDenyCSRRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDenyCSRRequest(val *DenyCSRRequest) *NullableDenyCSRRequest {
	return &NullableDenyCSRRequest{value: val, isSet: true}
}

func (v NullableDenyCSRRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDenyCSRRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
