/*
Host Activation Service

Host activation service provides a RESTful interface to manage cert and join token object. Join tokens are essentially a password that allows on-prem hosts to auto-associate themselves to a customer's account and receive a signed cert.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infraprovision

import (
	"encoding/json"
)

// checks if the CreateJoinTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateJoinTokenResponse{}

// CreateJoinTokenResponse struct for CreateJoinTokenResponse
type CreateJoinTokenResponse struct {
	JoinToken *string    `json:"join_token,omitempty"`
	Result    *JoinToken `json:"result,omitempty"`
}

// NewCreateJoinTokenResponse instantiates a new CreateJoinTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateJoinTokenResponse() *CreateJoinTokenResponse {
	this := CreateJoinTokenResponse{}
	return &this
}

// NewCreateJoinTokenResponseWithDefaults instantiates a new CreateJoinTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateJoinTokenResponseWithDefaults() *CreateJoinTokenResponse {
	this := CreateJoinTokenResponse{}
	return &this
}

// GetJoinToken returns the JoinToken field value if set, zero value otherwise.
func (o *CreateJoinTokenResponse) GetJoinToken() string {
	if o == nil || IsNil(o.JoinToken) {
		var ret string
		return ret
	}
	return *o.JoinToken
}

// GetJoinTokenOk returns a tuple with the JoinToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJoinTokenResponse) GetJoinTokenOk() (*string, bool) {
	if o == nil || IsNil(o.JoinToken) {
		return nil, false
	}
	return o.JoinToken, true
}

// HasJoinToken returns a boolean if a field has been set.
func (o *CreateJoinTokenResponse) HasJoinToken() bool {
	if o != nil && !IsNil(o.JoinToken) {
		return true
	}

	return false
}

// SetJoinToken gets a reference to the given string and assigns it to the JoinToken field.
func (o *CreateJoinTokenResponse) SetJoinToken(v string) {
	o.JoinToken = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateJoinTokenResponse) GetResult() JoinToken {
	if o == nil || IsNil(o.Result) {
		var ret JoinToken
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateJoinTokenResponse) GetResultOk() (*JoinToken, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateJoinTokenResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given JoinToken and assigns it to the Result field.
func (o *CreateJoinTokenResponse) SetResult(v JoinToken) {
	o.Result = &v
}

func (o CreateJoinTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateJoinTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JoinToken) {
		toSerialize["join_token"] = o.JoinToken
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableCreateJoinTokenResponse struct {
	value *CreateJoinTokenResponse
	isSet bool
}

func (v NullableCreateJoinTokenResponse) Get() *CreateJoinTokenResponse {
	return v.value
}

func (v *NullableCreateJoinTokenResponse) Set(val *CreateJoinTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateJoinTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateJoinTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateJoinTokenResponse(val *CreateJoinTokenResponse) *NullableCreateJoinTokenResponse {
	return &NullableCreateJoinTokenResponse{value: val, isSet: true}
}

func (v NullableCreateJoinTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateJoinTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
