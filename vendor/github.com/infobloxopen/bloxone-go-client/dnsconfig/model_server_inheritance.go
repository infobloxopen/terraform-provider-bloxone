/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dnsconfig

import (
	"encoding/json"
)

// checks if the ServerInheritance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInheritance{}

// ServerInheritance Inheritance configuration specifies how and which fields _Server_ object inherits from _Global_ parent.
type ServerInheritance struct {
	// Field config for _add_edns_option_in_outgoing_query_ field from _Server_ object.
	AddEdnsOptionInOutgoingQuery *Inheritance2InheritedBool `json:"add_edns_option_in_outgoing_query,omitempty"`
	// Optional. Field config for _custom_root_ns_block_ field from _Server_ object.
	CustomRootNsBlock *InheritedCustomRootNSBlock `json:"custom_root_ns_block,omitempty"`
	// Optional. Field config for _dnssec_validation_block_ field from _Server_ object.
	DnssecValidationBlock *InheritedDNSSECValidationBlock `json:"dnssec_validation_block,omitempty"`
	// Optional. Field config for _ecs_block_ field from _Server_ object.
	EcsBlock *InheritedECSBlock `json:"ecs_block,omitempty"`
	// Optional. Field config for _filter_aaaa_acl_ field from _Server_ object.
	FilterAaaaAcl *InheritedACLItems `json:"filter_aaaa_acl,omitempty"`
	// Optional. Field config for _filter_aaaa_on_v4_ field from _Server_ object.
	FilterAaaaOnV4 *Inheritance2InheritedString `json:"filter_aaaa_on_v4,omitempty"`
	// Optional. Field config for _forwarders_block_ field from _Server_ object.
	ForwardersBlock *InheritedForwardersBlock `json:"forwarders_block,omitempty"`
	// Optional. Field config for _gss_tsig_enabled_ field from _Server_ object.
	GssTsigEnabled *Inheritance2InheritedBool `json:"gss_tsig_enabled,omitempty"`
	// Optional. Field config for _kerberos_keys_ field from _Server_ object.
	KerberosKeys *InheritedKerberosKeys `json:"kerberos_keys,omitempty"`
	// Optional. Field config for _lame_ttl_ field from _Server_ object.
	LameTtl *Inheritance2InheritedUInt32 `json:"lame_ttl,omitempty"`
	// Optional. Field config for _log_queries_response_ field from _Server_ object.
	LogQueryResponse *Inheritance2InheritedBool `json:"log_query_response,omitempty"`
	// Optional. Field config for _match_recursive_only_ field from _Server_ object.
	MatchRecursiveOnly *Inheritance2InheritedBool `json:"match_recursive_only,omitempty"`
	// Optional. Field config for _max_cache_ttl_ field from _Server_ object.
	MaxCacheTtl *Inheritance2InheritedUInt32 `json:"max_cache_ttl,omitempty"`
	// Optional. Field config for _max_negative_ttl_ field from _Server_ object.
	MaxNegativeTtl *Inheritance2InheritedUInt32 `json:"max_negative_ttl,omitempty"`
	// Optional. Field config for _minimal_responses_ field from _Server_ object.
	MinimalResponses *Inheritance2InheritedBool `json:"minimal_responses,omitempty"`
	// Field config for _notify_ field from _Server_ object.
	Notify *Inheritance2InheritedBool `json:"notify,omitempty"`
	// Optional. Field config for _query_acl_ field from _Server_ object.
	QueryAcl *InheritedACLItems `json:"query_acl,omitempty"`
	// Optional. Field config for _query_port_ field from _Server_ object.
	QueryPort *Inheritance2InheritedUInt32 `json:"query_port,omitempty"`
	// Optional. Field config for _recursion_acl_ field from _Server_ object.
	RecursionAcl *InheritedACLItems `json:"recursion_acl,omitempty"`
	// Optional. Field config for _recursion_enabled_ field from _Server_ object.
	RecursionEnabled *Inheritance2InheritedBool `json:"recursion_enabled,omitempty"`
	// Optional. Field config for _recursive_clients_ field from _Server_ object.
	RecursiveClients *Inheritance2InheritedUInt32 `json:"recursive_clients,omitempty"`
	// Optional. Field config for _resolver_query_timeout_ field from _Server_ object.
	ResolverQueryTimeout *Inheritance2InheritedUInt32 `json:"resolver_query_timeout,omitempty"`
	// Optional. Field config for _secondary_axfr_query_limit_ field from _Server_ object.
	SecondaryAxfrQueryLimit *Inheritance2InheritedUInt32 `json:"secondary_axfr_query_limit,omitempty"`
	// Optional. Field config for _secondary_soa_query_limit_ field from _Server_ object.
	SecondarySoaQueryLimit *Inheritance2InheritedUInt32 `json:"secondary_soa_query_limit,omitempty"`
	// Optional. Field config for _sort_list_ field from _Server object.
	SortList *InheritedSortListItems `json:"sort_list,omitempty"`
	// Field config for _synthesize_address_records_from_https_ field from _Server_ object.
	SynthesizeAddressRecordsFromHttps *Inheritance2InheritedBool `json:"synthesize_address_records_from_https,omitempty"`
	// Optional. Field config for _transfer_acl_ field from _Server_ object.
	TransferAcl *InheritedACLItems `json:"transfer_acl,omitempty"`
	// Optional. Field config for _update_acl_ field from _Server_ object.
	UpdateAcl *InheritedACLItems `json:"update_acl,omitempty"`
	// Optional. Field config for _use_forwarders_for_subzones_ field from _Server_ object.
	UseForwardersForSubzones *Inheritance2InheritedBool `json:"use_forwarders_for_subzones,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _ServerInheritance ServerInheritance

// NewServerInheritance instantiates a new ServerInheritance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInheritance() *ServerInheritance {
	this := ServerInheritance{}
	return &this
}

// NewServerInheritanceWithDefaults instantiates a new ServerInheritance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInheritanceWithDefaults() *ServerInheritance {
	this := ServerInheritance{}
	return &this
}

// GetAddEdnsOptionInOutgoingQuery returns the AddEdnsOptionInOutgoingQuery field value if set, zero value otherwise.
func (o *ServerInheritance) GetAddEdnsOptionInOutgoingQuery() Inheritance2InheritedBool {
	if o == nil || IsNil(o.AddEdnsOptionInOutgoingQuery) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.AddEdnsOptionInOutgoingQuery
}

// GetAddEdnsOptionInOutgoingQueryOk returns a tuple with the AddEdnsOptionInOutgoingQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetAddEdnsOptionInOutgoingQueryOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.AddEdnsOptionInOutgoingQuery) {
		return nil, false
	}
	return o.AddEdnsOptionInOutgoingQuery, true
}

// HasAddEdnsOptionInOutgoingQuery returns a boolean if a field has been set.
func (o *ServerInheritance) HasAddEdnsOptionInOutgoingQuery() bool {
	if o != nil && !IsNil(o.AddEdnsOptionInOutgoingQuery) {
		return true
	}

	return false
}

// SetAddEdnsOptionInOutgoingQuery gets a reference to the given Inheritance2InheritedBool and assigns it to the AddEdnsOptionInOutgoingQuery field.
func (o *ServerInheritance) SetAddEdnsOptionInOutgoingQuery(v Inheritance2InheritedBool) {
	o.AddEdnsOptionInOutgoingQuery = &v
}

// GetCustomRootNsBlock returns the CustomRootNsBlock field value if set, zero value otherwise.
func (o *ServerInheritance) GetCustomRootNsBlock() InheritedCustomRootNSBlock {
	if o == nil || IsNil(o.CustomRootNsBlock) {
		var ret InheritedCustomRootNSBlock
		return ret
	}
	return *o.CustomRootNsBlock
}

// GetCustomRootNsBlockOk returns a tuple with the CustomRootNsBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetCustomRootNsBlockOk() (*InheritedCustomRootNSBlock, bool) {
	if o == nil || IsNil(o.CustomRootNsBlock) {
		return nil, false
	}
	return o.CustomRootNsBlock, true
}

// HasCustomRootNsBlock returns a boolean if a field has been set.
func (o *ServerInheritance) HasCustomRootNsBlock() bool {
	if o != nil && !IsNil(o.CustomRootNsBlock) {
		return true
	}

	return false
}

// SetCustomRootNsBlock gets a reference to the given InheritedCustomRootNSBlock and assigns it to the CustomRootNsBlock field.
func (o *ServerInheritance) SetCustomRootNsBlock(v InheritedCustomRootNSBlock) {
	o.CustomRootNsBlock = &v
}

// GetDnssecValidationBlock returns the DnssecValidationBlock field value if set, zero value otherwise.
func (o *ServerInheritance) GetDnssecValidationBlock() InheritedDNSSECValidationBlock {
	if o == nil || IsNil(o.DnssecValidationBlock) {
		var ret InheritedDNSSECValidationBlock
		return ret
	}
	return *o.DnssecValidationBlock
}

// GetDnssecValidationBlockOk returns a tuple with the DnssecValidationBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetDnssecValidationBlockOk() (*InheritedDNSSECValidationBlock, bool) {
	if o == nil || IsNil(o.DnssecValidationBlock) {
		return nil, false
	}
	return o.DnssecValidationBlock, true
}

// HasDnssecValidationBlock returns a boolean if a field has been set.
func (o *ServerInheritance) HasDnssecValidationBlock() bool {
	if o != nil && !IsNil(o.DnssecValidationBlock) {
		return true
	}

	return false
}

// SetDnssecValidationBlock gets a reference to the given InheritedDNSSECValidationBlock and assigns it to the DnssecValidationBlock field.
func (o *ServerInheritance) SetDnssecValidationBlock(v InheritedDNSSECValidationBlock) {
	o.DnssecValidationBlock = &v
}

// GetEcsBlock returns the EcsBlock field value if set, zero value otherwise.
func (o *ServerInheritance) GetEcsBlock() InheritedECSBlock {
	if o == nil || IsNil(o.EcsBlock) {
		var ret InheritedECSBlock
		return ret
	}
	return *o.EcsBlock
}

// GetEcsBlockOk returns a tuple with the EcsBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetEcsBlockOk() (*InheritedECSBlock, bool) {
	if o == nil || IsNil(o.EcsBlock) {
		return nil, false
	}
	return o.EcsBlock, true
}

// HasEcsBlock returns a boolean if a field has been set.
func (o *ServerInheritance) HasEcsBlock() bool {
	if o != nil && !IsNil(o.EcsBlock) {
		return true
	}

	return false
}

// SetEcsBlock gets a reference to the given InheritedECSBlock and assigns it to the EcsBlock field.
func (o *ServerInheritance) SetEcsBlock(v InheritedECSBlock) {
	o.EcsBlock = &v
}

// GetFilterAaaaAcl returns the FilterAaaaAcl field value if set, zero value otherwise.
func (o *ServerInheritance) GetFilterAaaaAcl() InheritedACLItems {
	if o == nil || IsNil(o.FilterAaaaAcl) {
		var ret InheritedACLItems
		return ret
	}
	return *o.FilterAaaaAcl
}

// GetFilterAaaaAclOk returns a tuple with the FilterAaaaAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetFilterAaaaAclOk() (*InheritedACLItems, bool) {
	if o == nil || IsNil(o.FilterAaaaAcl) {
		return nil, false
	}
	return o.FilterAaaaAcl, true
}

// HasFilterAaaaAcl returns a boolean if a field has been set.
func (o *ServerInheritance) HasFilterAaaaAcl() bool {
	if o != nil && !IsNil(o.FilterAaaaAcl) {
		return true
	}

	return false
}

// SetFilterAaaaAcl gets a reference to the given InheritedACLItems and assigns it to the FilterAaaaAcl field.
func (o *ServerInheritance) SetFilterAaaaAcl(v InheritedACLItems) {
	o.FilterAaaaAcl = &v
}

// GetFilterAaaaOnV4 returns the FilterAaaaOnV4 field value if set, zero value otherwise.
func (o *ServerInheritance) GetFilterAaaaOnV4() Inheritance2InheritedString {
	if o == nil || IsNil(o.FilterAaaaOnV4) {
		var ret Inheritance2InheritedString
		return ret
	}
	return *o.FilterAaaaOnV4
}

// GetFilterAaaaOnV4Ok returns a tuple with the FilterAaaaOnV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetFilterAaaaOnV4Ok() (*Inheritance2InheritedString, bool) {
	if o == nil || IsNil(o.FilterAaaaOnV4) {
		return nil, false
	}
	return o.FilterAaaaOnV4, true
}

// HasFilterAaaaOnV4 returns a boolean if a field has been set.
func (o *ServerInheritance) HasFilterAaaaOnV4() bool {
	if o != nil && !IsNil(o.FilterAaaaOnV4) {
		return true
	}

	return false
}

// SetFilterAaaaOnV4 gets a reference to the given Inheritance2InheritedString and assigns it to the FilterAaaaOnV4 field.
func (o *ServerInheritance) SetFilterAaaaOnV4(v Inheritance2InheritedString) {
	o.FilterAaaaOnV4 = &v
}

// GetForwardersBlock returns the ForwardersBlock field value if set, zero value otherwise.
func (o *ServerInheritance) GetForwardersBlock() InheritedForwardersBlock {
	if o == nil || IsNil(o.ForwardersBlock) {
		var ret InheritedForwardersBlock
		return ret
	}
	return *o.ForwardersBlock
}

// GetForwardersBlockOk returns a tuple with the ForwardersBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetForwardersBlockOk() (*InheritedForwardersBlock, bool) {
	if o == nil || IsNil(o.ForwardersBlock) {
		return nil, false
	}
	return o.ForwardersBlock, true
}

// HasForwardersBlock returns a boolean if a field has been set.
func (o *ServerInheritance) HasForwardersBlock() bool {
	if o != nil && !IsNil(o.ForwardersBlock) {
		return true
	}

	return false
}

// SetForwardersBlock gets a reference to the given InheritedForwardersBlock and assigns it to the ForwardersBlock field.
func (o *ServerInheritance) SetForwardersBlock(v InheritedForwardersBlock) {
	o.ForwardersBlock = &v
}

// GetGssTsigEnabled returns the GssTsigEnabled field value if set, zero value otherwise.
func (o *ServerInheritance) GetGssTsigEnabled() Inheritance2InheritedBool {
	if o == nil || IsNil(o.GssTsigEnabled) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.GssTsigEnabled
}

// GetGssTsigEnabledOk returns a tuple with the GssTsigEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetGssTsigEnabledOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.GssTsigEnabled) {
		return nil, false
	}
	return o.GssTsigEnabled, true
}

// HasGssTsigEnabled returns a boolean if a field has been set.
func (o *ServerInheritance) HasGssTsigEnabled() bool {
	if o != nil && !IsNil(o.GssTsigEnabled) {
		return true
	}

	return false
}

// SetGssTsigEnabled gets a reference to the given Inheritance2InheritedBool and assigns it to the GssTsigEnabled field.
func (o *ServerInheritance) SetGssTsigEnabled(v Inheritance2InheritedBool) {
	o.GssTsigEnabled = &v
}

// GetKerberosKeys returns the KerberosKeys field value if set, zero value otherwise.
func (o *ServerInheritance) GetKerberosKeys() InheritedKerberosKeys {
	if o == nil || IsNil(o.KerberosKeys) {
		var ret InheritedKerberosKeys
		return ret
	}
	return *o.KerberosKeys
}

// GetKerberosKeysOk returns a tuple with the KerberosKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetKerberosKeysOk() (*InheritedKerberosKeys, bool) {
	if o == nil || IsNil(o.KerberosKeys) {
		return nil, false
	}
	return o.KerberosKeys, true
}

// HasKerberosKeys returns a boolean if a field has been set.
func (o *ServerInheritance) HasKerberosKeys() bool {
	if o != nil && !IsNil(o.KerberosKeys) {
		return true
	}

	return false
}

// SetKerberosKeys gets a reference to the given InheritedKerberosKeys and assigns it to the KerberosKeys field.
func (o *ServerInheritance) SetKerberosKeys(v InheritedKerberosKeys) {
	o.KerberosKeys = &v
}

// GetLameTtl returns the LameTtl field value if set, zero value otherwise.
func (o *ServerInheritance) GetLameTtl() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.LameTtl) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.LameTtl
}

// GetLameTtlOk returns a tuple with the LameTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetLameTtlOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.LameTtl) {
		return nil, false
	}
	return o.LameTtl, true
}

// HasLameTtl returns a boolean if a field has been set.
func (o *ServerInheritance) HasLameTtl() bool {
	if o != nil && !IsNil(o.LameTtl) {
		return true
	}

	return false
}

// SetLameTtl gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the LameTtl field.
func (o *ServerInheritance) SetLameTtl(v Inheritance2InheritedUInt32) {
	o.LameTtl = &v
}

// GetLogQueryResponse returns the LogQueryResponse field value if set, zero value otherwise.
func (o *ServerInheritance) GetLogQueryResponse() Inheritance2InheritedBool {
	if o == nil || IsNil(o.LogQueryResponse) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.LogQueryResponse
}

// GetLogQueryResponseOk returns a tuple with the LogQueryResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetLogQueryResponseOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.LogQueryResponse) {
		return nil, false
	}
	return o.LogQueryResponse, true
}

// HasLogQueryResponse returns a boolean if a field has been set.
func (o *ServerInheritance) HasLogQueryResponse() bool {
	if o != nil && !IsNil(o.LogQueryResponse) {
		return true
	}

	return false
}

// SetLogQueryResponse gets a reference to the given Inheritance2InheritedBool and assigns it to the LogQueryResponse field.
func (o *ServerInheritance) SetLogQueryResponse(v Inheritance2InheritedBool) {
	o.LogQueryResponse = &v
}

// GetMatchRecursiveOnly returns the MatchRecursiveOnly field value if set, zero value otherwise.
func (o *ServerInheritance) GetMatchRecursiveOnly() Inheritance2InheritedBool {
	if o == nil || IsNil(o.MatchRecursiveOnly) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.MatchRecursiveOnly
}

// GetMatchRecursiveOnlyOk returns a tuple with the MatchRecursiveOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetMatchRecursiveOnlyOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.MatchRecursiveOnly) {
		return nil, false
	}
	return o.MatchRecursiveOnly, true
}

// HasMatchRecursiveOnly returns a boolean if a field has been set.
func (o *ServerInheritance) HasMatchRecursiveOnly() bool {
	if o != nil && !IsNil(o.MatchRecursiveOnly) {
		return true
	}

	return false
}

// SetMatchRecursiveOnly gets a reference to the given Inheritance2InheritedBool and assigns it to the MatchRecursiveOnly field.
func (o *ServerInheritance) SetMatchRecursiveOnly(v Inheritance2InheritedBool) {
	o.MatchRecursiveOnly = &v
}

// GetMaxCacheTtl returns the MaxCacheTtl field value if set, zero value otherwise.
func (o *ServerInheritance) GetMaxCacheTtl() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.MaxCacheTtl) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.MaxCacheTtl
}

// GetMaxCacheTtlOk returns a tuple with the MaxCacheTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetMaxCacheTtlOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.MaxCacheTtl) {
		return nil, false
	}
	return o.MaxCacheTtl, true
}

// HasMaxCacheTtl returns a boolean if a field has been set.
func (o *ServerInheritance) HasMaxCacheTtl() bool {
	if o != nil && !IsNil(o.MaxCacheTtl) {
		return true
	}

	return false
}

// SetMaxCacheTtl gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the MaxCacheTtl field.
func (o *ServerInheritance) SetMaxCacheTtl(v Inheritance2InheritedUInt32) {
	o.MaxCacheTtl = &v
}

// GetMaxNegativeTtl returns the MaxNegativeTtl field value if set, zero value otherwise.
func (o *ServerInheritance) GetMaxNegativeTtl() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.MaxNegativeTtl) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.MaxNegativeTtl
}

// GetMaxNegativeTtlOk returns a tuple with the MaxNegativeTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetMaxNegativeTtlOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.MaxNegativeTtl) {
		return nil, false
	}
	return o.MaxNegativeTtl, true
}

// HasMaxNegativeTtl returns a boolean if a field has been set.
func (o *ServerInheritance) HasMaxNegativeTtl() bool {
	if o != nil && !IsNil(o.MaxNegativeTtl) {
		return true
	}

	return false
}

// SetMaxNegativeTtl gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the MaxNegativeTtl field.
func (o *ServerInheritance) SetMaxNegativeTtl(v Inheritance2InheritedUInt32) {
	o.MaxNegativeTtl = &v
}

// GetMinimalResponses returns the MinimalResponses field value if set, zero value otherwise.
func (o *ServerInheritance) GetMinimalResponses() Inheritance2InheritedBool {
	if o == nil || IsNil(o.MinimalResponses) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.MinimalResponses
}

// GetMinimalResponsesOk returns a tuple with the MinimalResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetMinimalResponsesOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.MinimalResponses) {
		return nil, false
	}
	return o.MinimalResponses, true
}

// HasMinimalResponses returns a boolean if a field has been set.
func (o *ServerInheritance) HasMinimalResponses() bool {
	if o != nil && !IsNil(o.MinimalResponses) {
		return true
	}

	return false
}

// SetMinimalResponses gets a reference to the given Inheritance2InheritedBool and assigns it to the MinimalResponses field.
func (o *ServerInheritance) SetMinimalResponses(v Inheritance2InheritedBool) {
	o.MinimalResponses = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *ServerInheritance) GetNotify() Inheritance2InheritedBool {
	if o == nil || IsNil(o.Notify) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetNotifyOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *ServerInheritance) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given Inheritance2InheritedBool and assigns it to the Notify field.
func (o *ServerInheritance) SetNotify(v Inheritance2InheritedBool) {
	o.Notify = &v
}

// GetQueryAcl returns the QueryAcl field value if set, zero value otherwise.
func (o *ServerInheritance) GetQueryAcl() InheritedACLItems {
	if o == nil || IsNil(o.QueryAcl) {
		var ret InheritedACLItems
		return ret
	}
	return *o.QueryAcl
}

// GetQueryAclOk returns a tuple with the QueryAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetQueryAclOk() (*InheritedACLItems, bool) {
	if o == nil || IsNil(o.QueryAcl) {
		return nil, false
	}
	return o.QueryAcl, true
}

// HasQueryAcl returns a boolean if a field has been set.
func (o *ServerInheritance) HasQueryAcl() bool {
	if o != nil && !IsNil(o.QueryAcl) {
		return true
	}

	return false
}

// SetQueryAcl gets a reference to the given InheritedACLItems and assigns it to the QueryAcl field.
func (o *ServerInheritance) SetQueryAcl(v InheritedACLItems) {
	o.QueryAcl = &v
}

// GetQueryPort returns the QueryPort field value if set, zero value otherwise.
func (o *ServerInheritance) GetQueryPort() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.QueryPort) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.QueryPort
}

// GetQueryPortOk returns a tuple with the QueryPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetQueryPortOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.QueryPort) {
		return nil, false
	}
	return o.QueryPort, true
}

// HasQueryPort returns a boolean if a field has been set.
func (o *ServerInheritance) HasQueryPort() bool {
	if o != nil && !IsNil(o.QueryPort) {
		return true
	}

	return false
}

// SetQueryPort gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the QueryPort field.
func (o *ServerInheritance) SetQueryPort(v Inheritance2InheritedUInt32) {
	o.QueryPort = &v
}

// GetRecursionAcl returns the RecursionAcl field value if set, zero value otherwise.
func (o *ServerInheritance) GetRecursionAcl() InheritedACLItems {
	if o == nil || IsNil(o.RecursionAcl) {
		var ret InheritedACLItems
		return ret
	}
	return *o.RecursionAcl
}

// GetRecursionAclOk returns a tuple with the RecursionAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetRecursionAclOk() (*InheritedACLItems, bool) {
	if o == nil || IsNil(o.RecursionAcl) {
		return nil, false
	}
	return o.RecursionAcl, true
}

// HasRecursionAcl returns a boolean if a field has been set.
func (o *ServerInheritance) HasRecursionAcl() bool {
	if o != nil && !IsNil(o.RecursionAcl) {
		return true
	}

	return false
}

// SetRecursionAcl gets a reference to the given InheritedACLItems and assigns it to the RecursionAcl field.
func (o *ServerInheritance) SetRecursionAcl(v InheritedACLItems) {
	o.RecursionAcl = &v
}

// GetRecursionEnabled returns the RecursionEnabled field value if set, zero value otherwise.
func (o *ServerInheritance) GetRecursionEnabled() Inheritance2InheritedBool {
	if o == nil || IsNil(o.RecursionEnabled) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.RecursionEnabled
}

// GetRecursionEnabledOk returns a tuple with the RecursionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetRecursionEnabledOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.RecursionEnabled) {
		return nil, false
	}
	return o.RecursionEnabled, true
}

// HasRecursionEnabled returns a boolean if a field has been set.
func (o *ServerInheritance) HasRecursionEnabled() bool {
	if o != nil && !IsNil(o.RecursionEnabled) {
		return true
	}

	return false
}

// SetRecursionEnabled gets a reference to the given Inheritance2InheritedBool and assigns it to the RecursionEnabled field.
func (o *ServerInheritance) SetRecursionEnabled(v Inheritance2InheritedBool) {
	o.RecursionEnabled = &v
}

// GetRecursiveClients returns the RecursiveClients field value if set, zero value otherwise.
func (o *ServerInheritance) GetRecursiveClients() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.RecursiveClients) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.RecursiveClients
}

// GetRecursiveClientsOk returns a tuple with the RecursiveClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetRecursiveClientsOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.RecursiveClients) {
		return nil, false
	}
	return o.RecursiveClients, true
}

// HasRecursiveClients returns a boolean if a field has been set.
func (o *ServerInheritance) HasRecursiveClients() bool {
	if o != nil && !IsNil(o.RecursiveClients) {
		return true
	}

	return false
}

// SetRecursiveClients gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the RecursiveClients field.
func (o *ServerInheritance) SetRecursiveClients(v Inheritance2InheritedUInt32) {
	o.RecursiveClients = &v
}

// GetResolverQueryTimeout returns the ResolverQueryTimeout field value if set, zero value otherwise.
func (o *ServerInheritance) GetResolverQueryTimeout() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.ResolverQueryTimeout) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.ResolverQueryTimeout
}

// GetResolverQueryTimeoutOk returns a tuple with the ResolverQueryTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetResolverQueryTimeoutOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.ResolverQueryTimeout) {
		return nil, false
	}
	return o.ResolverQueryTimeout, true
}

// HasResolverQueryTimeout returns a boolean if a field has been set.
func (o *ServerInheritance) HasResolverQueryTimeout() bool {
	if o != nil && !IsNil(o.ResolverQueryTimeout) {
		return true
	}

	return false
}

// SetResolverQueryTimeout gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the ResolverQueryTimeout field.
func (o *ServerInheritance) SetResolverQueryTimeout(v Inheritance2InheritedUInt32) {
	o.ResolverQueryTimeout = &v
}

// GetSecondaryAxfrQueryLimit returns the SecondaryAxfrQueryLimit field value if set, zero value otherwise.
func (o *ServerInheritance) GetSecondaryAxfrQueryLimit() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.SecondaryAxfrQueryLimit) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.SecondaryAxfrQueryLimit
}

// GetSecondaryAxfrQueryLimitOk returns a tuple with the SecondaryAxfrQueryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetSecondaryAxfrQueryLimitOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.SecondaryAxfrQueryLimit) {
		return nil, false
	}
	return o.SecondaryAxfrQueryLimit, true
}

// HasSecondaryAxfrQueryLimit returns a boolean if a field has been set.
func (o *ServerInheritance) HasSecondaryAxfrQueryLimit() bool {
	if o != nil && !IsNil(o.SecondaryAxfrQueryLimit) {
		return true
	}

	return false
}

// SetSecondaryAxfrQueryLimit gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the SecondaryAxfrQueryLimit field.
func (o *ServerInheritance) SetSecondaryAxfrQueryLimit(v Inheritance2InheritedUInt32) {
	o.SecondaryAxfrQueryLimit = &v
}

// GetSecondarySoaQueryLimit returns the SecondarySoaQueryLimit field value if set, zero value otherwise.
func (o *ServerInheritance) GetSecondarySoaQueryLimit() Inheritance2InheritedUInt32 {
	if o == nil || IsNil(o.SecondarySoaQueryLimit) {
		var ret Inheritance2InheritedUInt32
		return ret
	}
	return *o.SecondarySoaQueryLimit
}

// GetSecondarySoaQueryLimitOk returns a tuple with the SecondarySoaQueryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetSecondarySoaQueryLimitOk() (*Inheritance2InheritedUInt32, bool) {
	if o == nil || IsNil(o.SecondarySoaQueryLimit) {
		return nil, false
	}
	return o.SecondarySoaQueryLimit, true
}

// HasSecondarySoaQueryLimit returns a boolean if a field has been set.
func (o *ServerInheritance) HasSecondarySoaQueryLimit() bool {
	if o != nil && !IsNil(o.SecondarySoaQueryLimit) {
		return true
	}

	return false
}

// SetSecondarySoaQueryLimit gets a reference to the given Inheritance2InheritedUInt32 and assigns it to the SecondarySoaQueryLimit field.
func (o *ServerInheritance) SetSecondarySoaQueryLimit(v Inheritance2InheritedUInt32) {
	o.SecondarySoaQueryLimit = &v
}

// GetSortList returns the SortList field value if set, zero value otherwise.
func (o *ServerInheritance) GetSortList() InheritedSortListItems {
	if o == nil || IsNil(o.SortList) {
		var ret InheritedSortListItems
		return ret
	}
	return *o.SortList
}

// GetSortListOk returns a tuple with the SortList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetSortListOk() (*InheritedSortListItems, bool) {
	if o == nil || IsNil(o.SortList) {
		return nil, false
	}
	return o.SortList, true
}

// HasSortList returns a boolean if a field has been set.
func (o *ServerInheritance) HasSortList() bool {
	if o != nil && !IsNil(o.SortList) {
		return true
	}

	return false
}

// SetSortList gets a reference to the given InheritedSortListItems and assigns it to the SortList field.
func (o *ServerInheritance) SetSortList(v InheritedSortListItems) {
	o.SortList = &v
}

// GetSynthesizeAddressRecordsFromHttps returns the SynthesizeAddressRecordsFromHttps field value if set, zero value otherwise.
func (o *ServerInheritance) GetSynthesizeAddressRecordsFromHttps() Inheritance2InheritedBool {
	if o == nil || IsNil(o.SynthesizeAddressRecordsFromHttps) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.SynthesizeAddressRecordsFromHttps
}

// GetSynthesizeAddressRecordsFromHttpsOk returns a tuple with the SynthesizeAddressRecordsFromHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetSynthesizeAddressRecordsFromHttpsOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.SynthesizeAddressRecordsFromHttps) {
		return nil, false
	}
	return o.SynthesizeAddressRecordsFromHttps, true
}

// HasSynthesizeAddressRecordsFromHttps returns a boolean if a field has been set.
func (o *ServerInheritance) HasSynthesizeAddressRecordsFromHttps() bool {
	if o != nil && !IsNil(o.SynthesizeAddressRecordsFromHttps) {
		return true
	}

	return false
}

// SetSynthesizeAddressRecordsFromHttps gets a reference to the given Inheritance2InheritedBool and assigns it to the SynthesizeAddressRecordsFromHttps field.
func (o *ServerInheritance) SetSynthesizeAddressRecordsFromHttps(v Inheritance2InheritedBool) {
	o.SynthesizeAddressRecordsFromHttps = &v
}

// GetTransferAcl returns the TransferAcl field value if set, zero value otherwise.
func (o *ServerInheritance) GetTransferAcl() InheritedACLItems {
	if o == nil || IsNil(o.TransferAcl) {
		var ret InheritedACLItems
		return ret
	}
	return *o.TransferAcl
}

// GetTransferAclOk returns a tuple with the TransferAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetTransferAclOk() (*InheritedACLItems, bool) {
	if o == nil || IsNil(o.TransferAcl) {
		return nil, false
	}
	return o.TransferAcl, true
}

// HasTransferAcl returns a boolean if a field has been set.
func (o *ServerInheritance) HasTransferAcl() bool {
	if o != nil && !IsNil(o.TransferAcl) {
		return true
	}

	return false
}

// SetTransferAcl gets a reference to the given InheritedACLItems and assigns it to the TransferAcl field.
func (o *ServerInheritance) SetTransferAcl(v InheritedACLItems) {
	o.TransferAcl = &v
}

// GetUpdateAcl returns the UpdateAcl field value if set, zero value otherwise.
func (o *ServerInheritance) GetUpdateAcl() InheritedACLItems {
	if o == nil || IsNil(o.UpdateAcl) {
		var ret InheritedACLItems
		return ret
	}
	return *o.UpdateAcl
}

// GetUpdateAclOk returns a tuple with the UpdateAcl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetUpdateAclOk() (*InheritedACLItems, bool) {
	if o == nil || IsNil(o.UpdateAcl) {
		return nil, false
	}
	return o.UpdateAcl, true
}

// HasUpdateAcl returns a boolean if a field has been set.
func (o *ServerInheritance) HasUpdateAcl() bool {
	if o != nil && !IsNil(o.UpdateAcl) {
		return true
	}

	return false
}

// SetUpdateAcl gets a reference to the given InheritedACLItems and assigns it to the UpdateAcl field.
func (o *ServerInheritance) SetUpdateAcl(v InheritedACLItems) {
	o.UpdateAcl = &v
}

// GetUseForwardersForSubzones returns the UseForwardersForSubzones field value if set, zero value otherwise.
func (o *ServerInheritance) GetUseForwardersForSubzones() Inheritance2InheritedBool {
	if o == nil || IsNil(o.UseForwardersForSubzones) {
		var ret Inheritance2InheritedBool
		return ret
	}
	return *o.UseForwardersForSubzones
}

// GetUseForwardersForSubzonesOk returns a tuple with the UseForwardersForSubzones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInheritance) GetUseForwardersForSubzonesOk() (*Inheritance2InheritedBool, bool) {
	if o == nil || IsNil(o.UseForwardersForSubzones) {
		return nil, false
	}
	return o.UseForwardersForSubzones, true
}

// HasUseForwardersForSubzones returns a boolean if a field has been set.
func (o *ServerInheritance) HasUseForwardersForSubzones() bool {
	if o != nil && !IsNil(o.UseForwardersForSubzones) {
		return true
	}

	return false
}

// SetUseForwardersForSubzones gets a reference to the given Inheritance2InheritedBool and assigns it to the UseForwardersForSubzones field.
func (o *ServerInheritance) SetUseForwardersForSubzones(v Inheritance2InheritedBool) {
	o.UseForwardersForSubzones = &v
}

func (o ServerInheritance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInheritance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddEdnsOptionInOutgoingQuery) {
		toSerialize["add_edns_option_in_outgoing_query"] = o.AddEdnsOptionInOutgoingQuery
	}
	if !IsNil(o.CustomRootNsBlock) {
		toSerialize["custom_root_ns_block"] = o.CustomRootNsBlock
	}
	if !IsNil(o.DnssecValidationBlock) {
		toSerialize["dnssec_validation_block"] = o.DnssecValidationBlock
	}
	if !IsNil(o.EcsBlock) {
		toSerialize["ecs_block"] = o.EcsBlock
	}
	if !IsNil(o.FilterAaaaAcl) {
		toSerialize["filter_aaaa_acl"] = o.FilterAaaaAcl
	}
	if !IsNil(o.FilterAaaaOnV4) {
		toSerialize["filter_aaaa_on_v4"] = o.FilterAaaaOnV4
	}
	if !IsNil(o.ForwardersBlock) {
		toSerialize["forwarders_block"] = o.ForwardersBlock
	}
	if !IsNil(o.GssTsigEnabled) {
		toSerialize["gss_tsig_enabled"] = o.GssTsigEnabled
	}
	if !IsNil(o.KerberosKeys) {
		toSerialize["kerberos_keys"] = o.KerberosKeys
	}
	if !IsNil(o.LameTtl) {
		toSerialize["lame_ttl"] = o.LameTtl
	}
	if !IsNil(o.LogQueryResponse) {
		toSerialize["log_query_response"] = o.LogQueryResponse
	}
	if !IsNil(o.MatchRecursiveOnly) {
		toSerialize["match_recursive_only"] = o.MatchRecursiveOnly
	}
	if !IsNil(o.MaxCacheTtl) {
		toSerialize["max_cache_ttl"] = o.MaxCacheTtl
	}
	if !IsNil(o.MaxNegativeTtl) {
		toSerialize["max_negative_ttl"] = o.MaxNegativeTtl
	}
	if !IsNil(o.MinimalResponses) {
		toSerialize["minimal_responses"] = o.MinimalResponses
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.QueryAcl) {
		toSerialize["query_acl"] = o.QueryAcl
	}
	if !IsNil(o.QueryPort) {
		toSerialize["query_port"] = o.QueryPort
	}
	if !IsNil(o.RecursionAcl) {
		toSerialize["recursion_acl"] = o.RecursionAcl
	}
	if !IsNil(o.RecursionEnabled) {
		toSerialize["recursion_enabled"] = o.RecursionEnabled
	}
	if !IsNil(o.RecursiveClients) {
		toSerialize["recursive_clients"] = o.RecursiveClients
	}
	if !IsNil(o.ResolverQueryTimeout) {
		toSerialize["resolver_query_timeout"] = o.ResolverQueryTimeout
	}
	if !IsNil(o.SecondaryAxfrQueryLimit) {
		toSerialize["secondary_axfr_query_limit"] = o.SecondaryAxfrQueryLimit
	}
	if !IsNil(o.SecondarySoaQueryLimit) {
		toSerialize["secondary_soa_query_limit"] = o.SecondarySoaQueryLimit
	}
	if !IsNil(o.SortList) {
		toSerialize["sort_list"] = o.SortList
	}
	if !IsNil(o.SynthesizeAddressRecordsFromHttps) {
		toSerialize["synthesize_address_records_from_https"] = o.SynthesizeAddressRecordsFromHttps
	}
	if !IsNil(o.TransferAcl) {
		toSerialize["transfer_acl"] = o.TransferAcl
	}
	if !IsNil(o.UpdateAcl) {
		toSerialize["update_acl"] = o.UpdateAcl
	}
	if !IsNil(o.UseForwardersForSubzones) {
		toSerialize["use_forwarders_for_subzones"] = o.UseForwardersForSubzones
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInheritance) UnmarshalJSON(data []byte) (err error) {
	varServerInheritance := _ServerInheritance{}

	err = json.Unmarshal(data, &varServerInheritance)

	if err != nil {
		return err
	}

	*o = ServerInheritance(varServerInheritance)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "add_edns_option_in_outgoing_query")
		delete(additionalProperties, "custom_root_ns_block")
		delete(additionalProperties, "dnssec_validation_block")
		delete(additionalProperties, "ecs_block")
		delete(additionalProperties, "filter_aaaa_acl")
		delete(additionalProperties, "filter_aaaa_on_v4")
		delete(additionalProperties, "forwarders_block")
		delete(additionalProperties, "gss_tsig_enabled")
		delete(additionalProperties, "kerberos_keys")
		delete(additionalProperties, "lame_ttl")
		delete(additionalProperties, "log_query_response")
		delete(additionalProperties, "match_recursive_only")
		delete(additionalProperties, "max_cache_ttl")
		delete(additionalProperties, "max_negative_ttl")
		delete(additionalProperties, "minimal_responses")
		delete(additionalProperties, "notify")
		delete(additionalProperties, "query_acl")
		delete(additionalProperties, "query_port")
		delete(additionalProperties, "recursion_acl")
		delete(additionalProperties, "recursion_enabled")
		delete(additionalProperties, "recursive_clients")
		delete(additionalProperties, "resolver_query_timeout")
		delete(additionalProperties, "secondary_axfr_query_limit")
		delete(additionalProperties, "secondary_soa_query_limit")
		delete(additionalProperties, "sort_list")
		delete(additionalProperties, "synthesize_address_records_from_https")
		delete(additionalProperties, "transfer_acl")
		delete(additionalProperties, "update_acl")
		delete(additionalProperties, "use_forwarders_for_subzones")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInheritance struct {
	value *ServerInheritance
	isSet bool
}

func (v NullableServerInheritance) Get() *ServerInheritance {
	return v.value
}

func (v *NullableServerInheritance) Set(val *ServerInheritance) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInheritance) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInheritance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInheritance(val *ServerInheritance) *NullableServerInheritance {
	return &NullableServerInheritance{value: val, isSet: true}
}

func (v NullableServerInheritance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInheritance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
