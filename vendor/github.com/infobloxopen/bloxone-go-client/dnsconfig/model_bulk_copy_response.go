/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dnsconfig

import (
	"encoding/json"
)

// checks if the BulkCopyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkCopyResponse{}

// BulkCopyResponse struct for BulkCopyResponse
type BulkCopyResponse struct {
	Errors               []BulkCopyError `json:"errors,omitempty"`
	Results              []CopyResponse  `json:"results,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BulkCopyResponse BulkCopyResponse

// NewBulkCopyResponse instantiates a new BulkCopyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkCopyResponse() *BulkCopyResponse {
	this := BulkCopyResponse{}
	return &this
}

// NewBulkCopyResponseWithDefaults instantiates a new BulkCopyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkCopyResponseWithDefaults() *BulkCopyResponse {
	this := BulkCopyResponse{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BulkCopyResponse) GetErrors() []BulkCopyError {
	if o == nil || IsNil(o.Errors) {
		var ret []BulkCopyError
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCopyResponse) GetErrorsOk() ([]BulkCopyError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BulkCopyResponse) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []BulkCopyError and assigns it to the Errors field.
func (o *BulkCopyResponse) SetErrors(v []BulkCopyError) {
	o.Errors = v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *BulkCopyResponse) GetResults() []CopyResponse {
	if o == nil || IsNil(o.Results) {
		var ret []CopyResponse
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCopyResponse) GetResultsOk() ([]CopyResponse, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *BulkCopyResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []CopyResponse and assigns it to the Results field.
func (o *BulkCopyResponse) SetResults(v []CopyResponse) {
	o.Results = v
}

func (o BulkCopyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkCopyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkCopyResponse) UnmarshalJSON(data []byte) (err error) {
	varBulkCopyResponse := _BulkCopyResponse{}

	err = json.Unmarshal(data, &varBulkCopyResponse)

	if err != nil {
		return err
	}

	*o = BulkCopyResponse(varBulkCopyResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "errors")
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkCopyResponse struct {
	value *BulkCopyResponse
	isSet bool
}

func (v NullableBulkCopyResponse) Get() *BulkCopyResponse {
	return v.value
}

func (v *NullableBulkCopyResponse) Set(val *BulkCopyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkCopyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkCopyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkCopyResponse(val *BulkCopyResponse) *NullableBulkCopyResponse {
	return &NullableBulkCopyResponse{value: val, isSet: true}
}

func (v NullableBulkCopyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkCopyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
