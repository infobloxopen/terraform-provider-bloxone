/*
BloxOne FW API

BloxOne Threat Defense Cloud is an extension of the BloxOne Suite that provides visibility into infected and compromised off-premises devices, roaming users, remote sites, and branch offices. You can subscribe to BloxOne Cloud and use its functionality to mitigate and control malware as well as provide unprecedented insight into your network security posture and enable timely action. BloxOne Cloud also offers unified policy management, reporting, and threat analytics across the entire spectrum. Using automated and high-quality threat intelligence feeds and unique behavioral analytics, it automatically stops device communications with C&Cs/botnets and prevents DNS based data exfiltration.  The mission-critical DNS infrastructure can become a vulnerable component in your network when it is inadequately protected by traditional security solutions and consequently used as an attack surface. Compromised DNS services can result in catastrophic network and system failures. To fully protect your network in todayâ€™s cyber security threat environment, Infoblox sets a new DNS security standard by offering scalable, enterprise-grade, and integrated protection for your DNS infrastructure.  Through the Infoblox Cloud Services Portal, you can view the status of your subscription and threat intelligence feeds, manage your network scope and roaming end users, and learn more about threats on your networks through the Infoblox Threat Lookup tool and predefined reports.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fw

import (
	"encoding/json"
)

// checks if the AtcfwSecurityPolicyRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AtcfwSecurityPolicyRule{}

// AtcfwSecurityPolicyRule The Security Policy Rule object.  The Security Policy Rule object represents a rule and action that you define to balance access and constraints so you can mitigate malicious attacks and provide security for your networks.
type AtcfwSecurityPolicyRule struct {
	// The action for the policy rule that can be either \"action_allow\" or \"action_log\" or \"action_redirect\" or \"action_block\" or \"action_allow_with_local_resolution\". \"action_allow_with_local_resolution\" only supported for application filter rule with enabled onprem_resolve flag on the Security policy.
	Action *string `json:"action,omitempty"`
	// The data source for the policy rule, that can be either a name of the predefined feed for \"named_feed\", custom list name for \"custom_list\" type, category filter name for \"category_filter\" type and application filter name for \"application_filter\" type.
	Data *string `json:"data,omitempty"`
	// The Custom List object identifier with which the policy rule is associated. 0 value means no custom list is associated with this policy rule.
	ListId *int32 `json:"list_id,omitempty"`
	// The identifier of the Security Policy object with which the policy rule is associated.
	PolicyId *int32 `json:"policy_id,omitempty"`
	// The name of the security policy with which the policy rule is associated.
	PolicyName *string `json:"policy_name,omitempty"`
	// The name of the redirect address for redirect actions that can be either IPv4 address or a domain name.
	RedirectName *string `json:"redirect_name,omitempty"`
	// The policy rule type that can be either \"named_feed\" or \"custom_list\" or \"category_filter\" or \"application_filter\".
	Type *string `json:"type,omitempty"`
}

// NewAtcfwSecurityPolicyRule instantiates a new AtcfwSecurityPolicyRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAtcfwSecurityPolicyRule() *AtcfwSecurityPolicyRule {
	this := AtcfwSecurityPolicyRule{}
	return &this
}

// NewAtcfwSecurityPolicyRuleWithDefaults instantiates a new AtcfwSecurityPolicyRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtcfwSecurityPolicyRuleWithDefaults() *AtcfwSecurityPolicyRule {
	this := AtcfwSecurityPolicyRule{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AtcfwSecurityPolicyRule) SetAction(v string) {
	o.Action = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *AtcfwSecurityPolicyRule) SetData(v string) {
	o.Data = &v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetListId() int32 {
	if o == nil || IsNil(o.ListId) {
		var ret int32
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetListIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given int32 and assigns it to the ListId field.
func (o *AtcfwSecurityPolicyRule) SetListId(v int32) {
	o.ListId = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetPolicyId() int32 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *AtcfwSecurityPolicyRule) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *AtcfwSecurityPolicyRule) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetRedirectName returns the RedirectName field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetRedirectName() string {
	if o == nil || IsNil(o.RedirectName) {
		var ret string
		return ret
	}
	return *o.RedirectName
}

// GetRedirectNameOk returns a tuple with the RedirectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetRedirectNameOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectName) {
		return nil, false
	}
	return o.RedirectName, true
}

// HasRedirectName returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasRedirectName() bool {
	if o != nil && !IsNil(o.RedirectName) {
		return true
	}

	return false
}

// SetRedirectName gets a reference to the given string and assigns it to the RedirectName field.
func (o *AtcfwSecurityPolicyRule) SetRedirectName(v string) {
	o.RedirectName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AtcfwSecurityPolicyRule) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwSecurityPolicyRule) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AtcfwSecurityPolicyRule) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AtcfwSecurityPolicyRule) SetType(v string) {
	o.Type = &v
}

func (o AtcfwSecurityPolicyRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AtcfwSecurityPolicyRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policy_name"] = o.PolicyName
	}
	if !IsNil(o.RedirectName) {
		toSerialize["redirect_name"] = o.RedirectName
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAtcfwSecurityPolicyRule struct {
	value *AtcfwSecurityPolicyRule
	isSet bool
}

func (v NullableAtcfwSecurityPolicyRule) Get() *AtcfwSecurityPolicyRule {
	return v.value
}

func (v *NullableAtcfwSecurityPolicyRule) Set(val *AtcfwSecurityPolicyRule) {
	v.value = val
	v.isSet = true
}

func (v NullableAtcfwSecurityPolicyRule) IsSet() bool {
	return v.isSet
}

func (v *NullableAtcfwSecurityPolicyRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAtcfwSecurityPolicyRule(val *AtcfwSecurityPolicyRule) *NullableAtcfwSecurityPolicyRule {
	return &NullableAtcfwSecurityPolicyRule{value: val, isSet: true}
}

func (v NullableAtcfwSecurityPolicyRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAtcfwSecurityPolicyRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
