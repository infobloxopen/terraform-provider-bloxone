/*
BloxOne FW API

BloxOne Threat Defense Cloud is an extension of the BloxOne Suite that provides visibility into infected and compromised off-premises devices, roaming users, remote sites, and branch offices. You can subscribe to BloxOne Cloud and use its functionality to mitigate and control malware as well as provide unprecedented insight into your network security posture and enable timely action. BloxOne Cloud also offers unified policy management, reporting, and threat analytics across the entire spectrum. Using automated and high-quality threat intelligence feeds and unique behavioral analytics, it automatically stops device communications with C&Cs/botnets and prevents DNS based data exfiltration.  The mission-critical DNS infrastructure can become a vulnerable component in your network when it is inadequately protected by traditional security solutions and consequently used as an attack surface. Compromised DNS services can result in catastrophic network and system failures. To fully protect your network in todayâ€™s cyber security threat environment, Infoblox sets a new DNS security standard by offering scalable, enterprise-grade, and integrated protection for your DNS infrastructure.  Through the Infoblox Cloud Services Portal, you can view the status of your subscription and threat intelligence feeds, manage your network scope and roaming end users, and learn more about threats on your networks through the Infoblox Threat Lookup tool and predefined reports.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fw

import (
	"encoding/json"
	"time"
)

// checks if the AtcfwApplicationFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AtcfwApplicationFilter{}

// AtcfwApplicationFilter The Application Filter object.  Application filters are content application rules that BloxOne Cloud uses to detect and filter specific internet content.
type AtcfwApplicationFilter struct {
	// The time when this Application Filter object was created.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// The array of key-value pairs specifying criteria for the search.
	Criteria []AtcfwApplicationCriterion `json:"criteria,omitempty"`
	// The brief description for the application filter.
	Description *string `json:"description,omitempty"`
	// The Application Filter object identifier.
	Id *int32 `json:"id,omitempty"`
	// The name of the application filter.
	Name *string `json:"name,omitempty"`
	// The list of security policy names with which the application filter is associated.
	Policies []string `json:"policies,omitempty"`
	// True if it is a predefined application filter
	Readonly *bool `json:"readonly,omitempty"`
	// Enables tag support for resource where tags attribute contains user-defined key value pairs
	Tags map[string]interface{} `json:"tags,omitempty"`
	// The time when this Application Filter object was last updated.
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
}

// NewAtcfwApplicationFilter instantiates a new AtcfwApplicationFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAtcfwApplicationFilter() *AtcfwApplicationFilter {
	this := AtcfwApplicationFilter{}
	return &this
}

// NewAtcfwApplicationFilterWithDefaults instantiates a new AtcfwApplicationFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAtcfwApplicationFilterWithDefaults() *AtcfwApplicationFilter {
	this := AtcfwApplicationFilter{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *AtcfwApplicationFilter) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetCriteria() []AtcfwApplicationCriterion {
	if o == nil || IsNil(o.Criteria) {
		var ret []AtcfwApplicationCriterion
		return ret
	}
	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetCriteriaOk() ([]AtcfwApplicationCriterion, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given []AtcfwApplicationCriterion and assigns it to the Criteria field.
func (o *AtcfwApplicationFilter) SetCriteria(v []AtcfwApplicationCriterion) {
	o.Criteria = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AtcfwApplicationFilter) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AtcfwApplicationFilter) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AtcfwApplicationFilter) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetPolicies() []string {
	if o == nil || IsNil(o.Policies) {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetPoliciesOk() ([]string, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *AtcfwApplicationFilter) SetPolicies(v []string) {
	o.Policies = v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetReadonly() bool {
	if o == nil || IsNil(o.Readonly) {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *AtcfwApplicationFilter) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetTags() map[string]interface{} {
	if o == nil || IsNil(o.Tags) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetTagsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return map[string]interface{}{}, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *AtcfwApplicationFilter) SetTags(v map[string]interface{}) {
	o.Tags = v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *AtcfwApplicationFilter) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AtcfwApplicationFilter) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *AtcfwApplicationFilter) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *AtcfwApplicationFilter) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o AtcfwApplicationFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AtcfwApplicationFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableAtcfwApplicationFilter struct {
	value *AtcfwApplicationFilter
	isSet bool
}

func (v NullableAtcfwApplicationFilter) Get() *AtcfwApplicationFilter {
	return v.value
}

func (v *NullableAtcfwApplicationFilter) Set(val *AtcfwApplicationFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAtcfwApplicationFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAtcfwApplicationFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAtcfwApplicationFilter(val *AtcfwApplicationFilter) *NullableAtcfwApplicationFilter {
	return &NullableAtcfwApplicationFilter{value: val, isSet: true}
}

func (v NullableAtcfwApplicationFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAtcfwApplicationFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
