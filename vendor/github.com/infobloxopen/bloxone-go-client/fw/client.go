/*
BloxOne FW API

BloxOne Threat Defense Cloud is an extension of the BloxOne Suite that provides visibility into infected and compromised off-premises devices, roaming users, remote sites, and branch offices. You can subscribe to BloxOne Cloud and use its functionality to mitigate and control malware as well as provide unprecedented insight into your network security posture and enable timely action. BloxOne Cloud also offers unified policy management, reporting, and threat analytics across the entire spectrum. Using automated and high-quality threat intelligence feeds and unique behavioral analytics, it automatically stops device communications with C&Cs/botnets and prevents DNS based data exfiltration.  The mission-critical DNS infrastructure can become a vulnerable component in your network when it is inadequately protected by traditional security solutions and consequently used as an attack surface. Compromised DNS services can result in catastrophic network and system failures. To fully protect your network in todayâ€™s cyber security threat environment, Infoblox sets a new DNS security standard by offering scalable, enterprise-grade, and integrated protection for your DNS infrastructure.  Through the Infoblox Cloud Services Portal, you can view the status of your subscription and threat intelligence feeds, manage your network scope and roaming end users, and learn more about threats on your networks through the Infoblox Threat Lookup tool and predefined reports.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fw

import (
	"github.com/infobloxopen/bloxone-go-client/internal"
	"github.com/infobloxopen/bloxone-go-client/option"
)

const serviceBasePath = "/api/atcfw/v1"

// APIClient manages communication with the BloxOne FW API v1
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	*internal.APIClient

	// API Services
	AccessCodesAPI         AccessCodesAPI
	AppApprovalsAPI        AppApprovalsAPI
	ApplicationFiltersAPI  ApplicationFiltersAPI
	CategoryFiltersAPI     CategoryFiltersAPI
	ContentCategoriesAPI   ContentCategoriesAPI
	InternalDomainListsAPI InternalDomainListsAPI
	NamedListItemsAPI      NamedListItemsAPI
	NamedListsAPI          NamedListsAPI
	NetworkListsAPI        NetworkListsAPI
	PopRegionsAPI          PopRegionsAPI
	SecurityPoliciesAPI    SecurityPoliciesAPI
	SecurityPolicyRulesAPI SecurityPolicyRulesAPI
	ThreatFeedsAPI         ThreatFeedsAPI
}

// NewAPIClient creates a new API client.
// The client can be configured with a variadic option. The following options are available:
// - WithClientName(string) sets the name of the client using the SDK.
// - WithCSPUrl(string) sets the URL for BloxOne Cloud Services Portal.
// - WithAPIKey(string) sets the APIKey for accessing the BloxOne API.
// - WithHTTPClient(*http.Client) sets the HTTPClient to use for the SDK.
// - WithDefaultTags(map[string]string) sets the tags the client can set by default for objects that has tags support.
// - WithDebug() sets the debug mode.
func NewAPIClient(options ...option.ClientOption) *APIClient {
	cfg := internal.NewConfiguration()
	for _, o := range options {
		o(cfg)
	}

	c := &APIClient{}
	c.APIClient = internal.NewAPIClient(serviceBasePath, cfg)

	// API Services
	c.AccessCodesAPI = (*AccessCodesAPIService)(&c.Common)
	c.AppApprovalsAPI = (*AppApprovalsAPIService)(&c.Common)
	c.ApplicationFiltersAPI = (*ApplicationFiltersAPIService)(&c.Common)
	c.CategoryFiltersAPI = (*CategoryFiltersAPIService)(&c.Common)
	c.ContentCategoriesAPI = (*ContentCategoriesAPIService)(&c.Common)
	c.InternalDomainListsAPI = (*InternalDomainListsAPIService)(&c.Common)
	c.NamedListItemsAPI = (*NamedListItemsAPIService)(&c.Common)
	c.NamedListsAPI = (*NamedListsAPIService)(&c.Common)
	c.NetworkListsAPI = (*NetworkListsAPIService)(&c.Common)
	c.PopRegionsAPI = (*PopRegionsAPIService)(&c.Common)
	c.SecurityPoliciesAPI = (*SecurityPoliciesAPIService)(&c.Common)
	c.SecurityPolicyRulesAPI = (*SecurityPolicyRulesAPIService)(&c.Common)
	c.ThreatFeedsAPI = (*ThreatFeedsAPIService)(&c.Common)

	return c
}
