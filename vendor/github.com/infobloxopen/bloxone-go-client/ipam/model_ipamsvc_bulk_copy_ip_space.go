/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the IpamsvcBulkCopyIPSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpamsvcBulkCopyIPSpace{}

// IpamsvcBulkCopyIPSpace struct for IpamsvcBulkCopyIPSpace
type IpamsvcBulkCopyIPSpace struct {
	// Indicates whether dhcp options for IPv4 should be copied or not when objects (_ipam/address_block_ and _ipam/subnet_ only) are copied.  Defaults to _false_.
	CopyDhcpOptions *bool `json:"copy_dhcp_options,omitempty"`
	// The resource identifier.
	CopyObjects []string `json:"copy_objects"`
	// Indicates whether child objects should be copied or not.  Defaults to _false_.
	Recursive *bool `json:"recursive,omitempty"`
	// Indicates whether copying should skip object in case of error and continue with next, or abort copying in case of error.  Defaults to _false_.
	SkipOnError *bool `json:"skip_on_error,omitempty"`
	// The resource identifier.
	Target string `json:"target"`
}

// NewIpamsvcBulkCopyIPSpace instantiates a new IpamsvcBulkCopyIPSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamsvcBulkCopyIPSpace(copyObjects []string, target string) *IpamsvcBulkCopyIPSpace {
	this := IpamsvcBulkCopyIPSpace{}
	this.CopyObjects = copyObjects
	this.Target = target
	return &this
}

// NewIpamsvcBulkCopyIPSpaceWithDefaults instantiates a new IpamsvcBulkCopyIPSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamsvcBulkCopyIPSpaceWithDefaults() *IpamsvcBulkCopyIPSpace {
	this := IpamsvcBulkCopyIPSpace{}
	return &this
}

// GetCopyDhcpOptions returns the CopyDhcpOptions field value if set, zero value otherwise.
func (o *IpamsvcBulkCopyIPSpace) GetCopyDhcpOptions() bool {
	if o == nil || IsNil(o.CopyDhcpOptions) {
		var ret bool
		return ret
	}
	return *o.CopyDhcpOptions
}

// GetCopyDhcpOptionsOk returns a tuple with the CopyDhcpOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcBulkCopyIPSpace) GetCopyDhcpOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyDhcpOptions) {
		return nil, false
	}
	return o.CopyDhcpOptions, true
}

// HasCopyDhcpOptions returns a boolean if a field has been set.
func (o *IpamsvcBulkCopyIPSpace) HasCopyDhcpOptions() bool {
	if o != nil && !IsNil(o.CopyDhcpOptions) {
		return true
	}

	return false
}

// SetCopyDhcpOptions gets a reference to the given bool and assigns it to the CopyDhcpOptions field.
func (o *IpamsvcBulkCopyIPSpace) SetCopyDhcpOptions(v bool) {
	o.CopyDhcpOptions = &v
}

// GetCopyObjects returns the CopyObjects field value
func (o *IpamsvcBulkCopyIPSpace) GetCopyObjects() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CopyObjects
}

// GetCopyObjectsOk returns a tuple with the CopyObjects field value
// and a boolean to check if the value has been set.
func (o *IpamsvcBulkCopyIPSpace) GetCopyObjectsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CopyObjects, true
}

// SetCopyObjects sets field value
func (o *IpamsvcBulkCopyIPSpace) SetCopyObjects(v []string) {
	o.CopyObjects = v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *IpamsvcBulkCopyIPSpace) GetRecursive() bool {
	if o == nil || IsNil(o.Recursive) {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcBulkCopyIPSpace) GetRecursiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Recursive) {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *IpamsvcBulkCopyIPSpace) HasRecursive() bool {
	if o != nil && !IsNil(o.Recursive) {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *IpamsvcBulkCopyIPSpace) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetSkipOnError returns the SkipOnError field value if set, zero value otherwise.
func (o *IpamsvcBulkCopyIPSpace) GetSkipOnError() bool {
	if o == nil || IsNil(o.SkipOnError) {
		var ret bool
		return ret
	}
	return *o.SkipOnError
}

// GetSkipOnErrorOk returns a tuple with the SkipOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcBulkCopyIPSpace) GetSkipOnErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOnError) {
		return nil, false
	}
	return o.SkipOnError, true
}

// HasSkipOnError returns a boolean if a field has been set.
func (o *IpamsvcBulkCopyIPSpace) HasSkipOnError() bool {
	if o != nil && !IsNil(o.SkipOnError) {
		return true
	}

	return false
}

// SetSkipOnError gets a reference to the given bool and assigns it to the SkipOnError field.
func (o *IpamsvcBulkCopyIPSpace) SetSkipOnError(v bool) {
	o.SkipOnError = &v
}

// GetTarget returns the Target field value
func (o *IpamsvcBulkCopyIPSpace) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *IpamsvcBulkCopyIPSpace) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *IpamsvcBulkCopyIPSpace) SetTarget(v string) {
	o.Target = v
}

func (o IpamsvcBulkCopyIPSpace) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpamsvcBulkCopyIPSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyDhcpOptions) {
		toSerialize["copy_dhcp_options"] = o.CopyDhcpOptions
	}
	toSerialize["copy_objects"] = o.CopyObjects
	if !IsNil(o.Recursive) {
		toSerialize["recursive"] = o.Recursive
	}
	if !IsNil(o.SkipOnError) {
		toSerialize["skip_on_error"] = o.SkipOnError
	}
	toSerialize["target"] = o.Target
	return toSerialize, nil
}

type NullableIpamsvcBulkCopyIPSpace struct {
	value *IpamsvcBulkCopyIPSpace
	isSet bool
}

func (v NullableIpamsvcBulkCopyIPSpace) Get() *IpamsvcBulkCopyIPSpace {
	return v.value
}

func (v *NullableIpamsvcBulkCopyIPSpace) Set(val *IpamsvcBulkCopyIPSpace) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamsvcBulkCopyIPSpace) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamsvcBulkCopyIPSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamsvcBulkCopyIPSpace(val *IpamsvcBulkCopyIPSpace) *NullableIpamsvcBulkCopyIPSpace {
	return &NullableIpamsvcBulkCopyIPSpace{value: val, isSet: true}
}

func (v NullableIpamsvcBulkCopyIPSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamsvcBulkCopyIPSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
