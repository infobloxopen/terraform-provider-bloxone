/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the IpamsvcInheritedDHCPOptionList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpamsvcInheritedDHCPOptionList{}

// IpamsvcInheritedDHCPOptionList The inheritance configuration for a field that contains list of _OptionItem_.
type IpamsvcInheritedDHCPOptionList struct {
	// The inheritance setting.  Valid values are: * _inherit_: Use the inherited value. * _block_: Don't use the inherited value.  Defaults to _inherit_.
	Action *string `json:"action,omitempty"`
	// The inherited DHCP option values.
	Value []IpamsvcInheritedDHCPOption `json:"value,omitempty"`
}

// NewIpamsvcInheritedDHCPOptionList instantiates a new IpamsvcInheritedDHCPOptionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamsvcInheritedDHCPOptionList() *IpamsvcInheritedDHCPOptionList {
	this := IpamsvcInheritedDHCPOptionList{}
	return &this
}

// NewIpamsvcInheritedDHCPOptionListWithDefaults instantiates a new IpamsvcInheritedDHCPOptionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamsvcInheritedDHCPOptionListWithDefaults() *IpamsvcInheritedDHCPOptionList {
	this := IpamsvcInheritedDHCPOptionList{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IpamsvcInheritedDHCPOptionList) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcInheritedDHCPOptionList) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IpamsvcInheritedDHCPOptionList) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IpamsvcInheritedDHCPOptionList) SetAction(v string) {
	o.Action = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IpamsvcInheritedDHCPOptionList) GetValue() []IpamsvcInheritedDHCPOption {
	if o == nil || IsNil(o.Value) {
		var ret []IpamsvcInheritedDHCPOption
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcInheritedDHCPOptionList) GetValueOk() ([]IpamsvcInheritedDHCPOption, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IpamsvcInheritedDHCPOptionList) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given []IpamsvcInheritedDHCPOption and assigns it to the Value field.
func (o *IpamsvcInheritedDHCPOptionList) SetValue(v []IpamsvcInheritedDHCPOption) {
	o.Value = v
}

func (o IpamsvcInheritedDHCPOptionList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpamsvcInheritedDHCPOptionList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableIpamsvcInheritedDHCPOptionList struct {
	value *IpamsvcInheritedDHCPOptionList
	isSet bool
}

func (v NullableIpamsvcInheritedDHCPOptionList) Get() *IpamsvcInheritedDHCPOptionList {
	return v.value
}

func (v *NullableIpamsvcInheritedDHCPOptionList) Set(val *IpamsvcInheritedDHCPOptionList) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamsvcInheritedDHCPOptionList) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamsvcInheritedDHCPOptionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamsvcInheritedDHCPOptionList(val *IpamsvcInheritedDHCPOptionList) *NullableIpamsvcInheritedDHCPOptionList {
	return &NullableIpamsvcInheritedDHCPOptionList{value: val, isSet: true}
}

func (v NullableIpamsvcInheritedDHCPOptionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamsvcInheritedDHCPOptionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
