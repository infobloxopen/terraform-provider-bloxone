/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the IpamsvcDHCPPacketStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpamsvcDHCPPacketStats{}

// IpamsvcDHCPPacketStats The DHCPPacketStats object represents DHCP packets statistics for a DHCP __Host__.
type IpamsvcDHCPPacketStats struct {
	// The number of DHCP packets received.
	DhcpPktReceived *string `json:"dhcp_pkt_received,omitempty"`
	// The number of DHCP V6 packets received.
	DhcpPktReceivedV6 *string `json:"dhcp_pkt_received_v6,omitempty"`
	// The number of DHCP packets sent.
	DhcpPktSent *string `json:"dhcp_pkt_sent,omitempty"`
	// The number of DHCP V6 packets sent.
	DhcpPktSentV6 *string `json:"dhcp_pkt_sent_v6,omitempty"`
	// The number of DHCP requests received.
	DhcpReqReceived *string `json:"dhcp_req_received,omitempty"`
	// The number of DHCP V6 requests received.
	DhcpReqReceivedV6 *string `json:"dhcp_req_received_v6,omitempty"`
}

// NewIpamsvcDHCPPacketStats instantiates a new IpamsvcDHCPPacketStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamsvcDHCPPacketStats() *IpamsvcDHCPPacketStats {
	this := IpamsvcDHCPPacketStats{}
	return &this
}

// NewIpamsvcDHCPPacketStatsWithDefaults instantiates a new IpamsvcDHCPPacketStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamsvcDHCPPacketStatsWithDefaults() *IpamsvcDHCPPacketStats {
	this := IpamsvcDHCPPacketStats{}
	return &this
}

// GetDhcpPktReceived returns the DhcpPktReceived field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktReceived() string {
	if o == nil || IsNil(o.DhcpPktReceived) {
		var ret string
		return ret
	}
	return *o.DhcpPktReceived
}

// GetDhcpPktReceivedOk returns a tuple with the DhcpPktReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.DhcpPktReceived) {
		return nil, false
	}
	return o.DhcpPktReceived, true
}

// HasDhcpPktReceived returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpPktReceived() bool {
	if o != nil && !IsNil(o.DhcpPktReceived) {
		return true
	}

	return false
}

// SetDhcpPktReceived gets a reference to the given string and assigns it to the DhcpPktReceived field.
func (o *IpamsvcDHCPPacketStats) SetDhcpPktReceived(v string) {
	o.DhcpPktReceived = &v
}

// GetDhcpPktReceivedV6 returns the DhcpPktReceivedV6 field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktReceivedV6() string {
	if o == nil || IsNil(o.DhcpPktReceivedV6) {
		var ret string
		return ret
	}
	return *o.DhcpPktReceivedV6
}

// GetDhcpPktReceivedV6Ok returns a tuple with the DhcpPktReceivedV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktReceivedV6Ok() (*string, bool) {
	if o == nil || IsNil(o.DhcpPktReceivedV6) {
		return nil, false
	}
	return o.DhcpPktReceivedV6, true
}

// HasDhcpPktReceivedV6 returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpPktReceivedV6() bool {
	if o != nil && !IsNil(o.DhcpPktReceivedV6) {
		return true
	}

	return false
}

// SetDhcpPktReceivedV6 gets a reference to the given string and assigns it to the DhcpPktReceivedV6 field.
func (o *IpamsvcDHCPPacketStats) SetDhcpPktReceivedV6(v string) {
	o.DhcpPktReceivedV6 = &v
}

// GetDhcpPktSent returns the DhcpPktSent field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktSent() string {
	if o == nil || IsNil(o.DhcpPktSent) {
		var ret string
		return ret
	}
	return *o.DhcpPktSent
}

// GetDhcpPktSentOk returns a tuple with the DhcpPktSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktSentOk() (*string, bool) {
	if o == nil || IsNil(o.DhcpPktSent) {
		return nil, false
	}
	return o.DhcpPktSent, true
}

// HasDhcpPktSent returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpPktSent() bool {
	if o != nil && !IsNil(o.DhcpPktSent) {
		return true
	}

	return false
}

// SetDhcpPktSent gets a reference to the given string and assigns it to the DhcpPktSent field.
func (o *IpamsvcDHCPPacketStats) SetDhcpPktSent(v string) {
	o.DhcpPktSent = &v
}

// GetDhcpPktSentV6 returns the DhcpPktSentV6 field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktSentV6() string {
	if o == nil || IsNil(o.DhcpPktSentV6) {
		var ret string
		return ret
	}
	return *o.DhcpPktSentV6
}

// GetDhcpPktSentV6Ok returns a tuple with the DhcpPktSentV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpPktSentV6Ok() (*string, bool) {
	if o == nil || IsNil(o.DhcpPktSentV6) {
		return nil, false
	}
	return o.DhcpPktSentV6, true
}

// HasDhcpPktSentV6 returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpPktSentV6() bool {
	if o != nil && !IsNil(o.DhcpPktSentV6) {
		return true
	}

	return false
}

// SetDhcpPktSentV6 gets a reference to the given string and assigns it to the DhcpPktSentV6 field.
func (o *IpamsvcDHCPPacketStats) SetDhcpPktSentV6(v string) {
	o.DhcpPktSentV6 = &v
}

// GetDhcpReqReceived returns the DhcpReqReceived field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpReqReceived() string {
	if o == nil || IsNil(o.DhcpReqReceived) {
		var ret string
		return ret
	}
	return *o.DhcpReqReceived
}

// GetDhcpReqReceivedOk returns a tuple with the DhcpReqReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpReqReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.DhcpReqReceived) {
		return nil, false
	}
	return o.DhcpReqReceived, true
}

// HasDhcpReqReceived returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpReqReceived() bool {
	if o != nil && !IsNil(o.DhcpReqReceived) {
		return true
	}

	return false
}

// SetDhcpReqReceived gets a reference to the given string and assigns it to the DhcpReqReceived field.
func (o *IpamsvcDHCPPacketStats) SetDhcpReqReceived(v string) {
	o.DhcpReqReceived = &v
}

// GetDhcpReqReceivedV6 returns the DhcpReqReceivedV6 field value if set, zero value otherwise.
func (o *IpamsvcDHCPPacketStats) GetDhcpReqReceivedV6() string {
	if o == nil || IsNil(o.DhcpReqReceivedV6) {
		var ret string
		return ret
	}
	return *o.DhcpReqReceivedV6
}

// GetDhcpReqReceivedV6Ok returns a tuple with the DhcpReqReceivedV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcDHCPPacketStats) GetDhcpReqReceivedV6Ok() (*string, bool) {
	if o == nil || IsNil(o.DhcpReqReceivedV6) {
		return nil, false
	}
	return o.DhcpReqReceivedV6, true
}

// HasDhcpReqReceivedV6 returns a boolean if a field has been set.
func (o *IpamsvcDHCPPacketStats) HasDhcpReqReceivedV6() bool {
	if o != nil && !IsNil(o.DhcpReqReceivedV6) {
		return true
	}

	return false
}

// SetDhcpReqReceivedV6 gets a reference to the given string and assigns it to the DhcpReqReceivedV6 field.
func (o *IpamsvcDHCPPacketStats) SetDhcpReqReceivedV6(v string) {
	o.DhcpReqReceivedV6 = &v
}

func (o IpamsvcDHCPPacketStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpamsvcDHCPPacketStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DhcpPktReceived) {
		toSerialize["dhcp_pkt_received"] = o.DhcpPktReceived
	}
	if !IsNil(o.DhcpPktReceivedV6) {
		toSerialize["dhcp_pkt_received_v6"] = o.DhcpPktReceivedV6
	}
	if !IsNil(o.DhcpPktSent) {
		toSerialize["dhcp_pkt_sent"] = o.DhcpPktSent
	}
	if !IsNil(o.DhcpPktSentV6) {
		toSerialize["dhcp_pkt_sent_v6"] = o.DhcpPktSentV6
	}
	if !IsNil(o.DhcpReqReceived) {
		toSerialize["dhcp_req_received"] = o.DhcpReqReceived
	}
	if !IsNil(o.DhcpReqReceivedV6) {
		toSerialize["dhcp_req_received_v6"] = o.DhcpReqReceivedV6
	}
	return toSerialize, nil
}

type NullableIpamsvcDHCPPacketStats struct {
	value *IpamsvcDHCPPacketStats
	isSet bool
}

func (v NullableIpamsvcDHCPPacketStats) Get() *IpamsvcDHCPPacketStats {
	return v.value
}

func (v *NullableIpamsvcDHCPPacketStats) Set(val *IpamsvcDHCPPacketStats) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamsvcDHCPPacketStats) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamsvcDHCPPacketStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamsvcDHCPPacketStats(val *IpamsvcDHCPPacketStats) *NullableIpamsvcDHCPPacketStats {
	return &NullableIpamsvcDHCPPacketStats{value: val, isSet: true}
}

func (v NullableIpamsvcDHCPPacketStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamsvcDHCPPacketStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
