/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
	"fmt"
)

// checks if the DisassociateConfigProfileFromObjectsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisassociateConfigProfileFromObjectsRequest{}

// DisassociateConfigProfileFromObjectsRequest DisassociateConfigProfileToObjects disassociates an object to config profiles.
type DisassociateConfigProfileFromObjectsRequest struct {
	// The resource identifier.
	ConfigProfileId string             `json:"config_profile_id"`
	Fields          *ProtobufFieldMask `json:"fields,omitempty"`
	// The resource identifier.
	ObjectIds            []string `json:"object_ids"`
	AdditionalProperties map[string]interface{}
}

type _DisassociateConfigProfileFromObjectsRequest DisassociateConfigProfileFromObjectsRequest

// NewDisassociateConfigProfileFromObjectsRequest instantiates a new DisassociateConfigProfileFromObjectsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisassociateConfigProfileFromObjectsRequest(configProfileId string, objectIds []string) *DisassociateConfigProfileFromObjectsRequest {
	this := DisassociateConfigProfileFromObjectsRequest{}
	this.ConfigProfileId = configProfileId
	this.ObjectIds = objectIds
	return &this
}

// NewDisassociateConfigProfileFromObjectsRequestWithDefaults instantiates a new DisassociateConfigProfileFromObjectsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisassociateConfigProfileFromObjectsRequestWithDefaults() *DisassociateConfigProfileFromObjectsRequest {
	this := DisassociateConfigProfileFromObjectsRequest{}
	return &this
}

// GetConfigProfileId returns the ConfigProfileId field value
func (o *DisassociateConfigProfileFromObjectsRequest) GetConfigProfileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigProfileId
}

// GetConfigProfileIdOk returns a tuple with the ConfigProfileId field value
// and a boolean to check if the value has been set.
func (o *DisassociateConfigProfileFromObjectsRequest) GetConfigProfileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigProfileId, true
}

// SetConfigProfileId sets field value
func (o *DisassociateConfigProfileFromObjectsRequest) SetConfigProfileId(v string) {
	o.ConfigProfileId = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *DisassociateConfigProfileFromObjectsRequest) GetFields() ProtobufFieldMask {
	if o == nil || IsNil(o.Fields) {
		var ret ProtobufFieldMask
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisassociateConfigProfileFromObjectsRequest) GetFieldsOk() (*ProtobufFieldMask, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *DisassociateConfigProfileFromObjectsRequest) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given ProtobufFieldMask and assigns it to the Fields field.
func (o *DisassociateConfigProfileFromObjectsRequest) SetFields(v ProtobufFieldMask) {
	o.Fields = &v
}

// GetObjectIds returns the ObjectIds field value
func (o *DisassociateConfigProfileFromObjectsRequest) GetObjectIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value
// and a boolean to check if the value has been set.
func (o *DisassociateConfigProfileFromObjectsRequest) GetObjectIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// SetObjectIds sets field value
func (o *DisassociateConfigProfileFromObjectsRequest) SetObjectIds(v []string) {
	o.ObjectIds = v
}

func (o DisassociateConfigProfileFromObjectsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisassociateConfigProfileFromObjectsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config_profile_id"] = o.ConfigProfileId
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	toSerialize["object_ids"] = o.ObjectIds

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DisassociateConfigProfileFromObjectsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"config_profile_id",
		"object_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDisassociateConfigProfileFromObjectsRequest := _DisassociateConfigProfileFromObjectsRequest{}

	err = json.Unmarshal(data, &varDisassociateConfigProfileFromObjectsRequest)

	if err != nil {
		return err
	}

	*o = DisassociateConfigProfileFromObjectsRequest(varDisassociateConfigProfileFromObjectsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "config_profile_id")
		delete(additionalProperties, "fields")
		delete(additionalProperties, "object_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDisassociateConfigProfileFromObjectsRequest struct {
	value *DisassociateConfigProfileFromObjectsRequest
	isSet bool
}

func (v NullableDisassociateConfigProfileFromObjectsRequest) Get() *DisassociateConfigProfileFromObjectsRequest {
	return v.value
}

func (v *NullableDisassociateConfigProfileFromObjectsRequest) Set(val *DisassociateConfigProfileFromObjectsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDisassociateConfigProfileFromObjectsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDisassociateConfigProfileFromObjectsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisassociateConfigProfileFromObjectsRequest(val *DisassociateConfigProfileFromObjectsRequest) *NullableDisassociateConfigProfileFromObjectsRequest {
	return &NullableDisassociateConfigProfileFromObjectsRequest{value: val, isSet: true}
}

func (v NullableDisassociateConfigProfileFromObjectsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisassociateConfigProfileFromObjectsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
