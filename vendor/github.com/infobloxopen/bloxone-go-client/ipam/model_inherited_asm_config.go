/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the InheritedASMConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InheritedASMConfig{}

// InheritedASMConfig The inheritance configuration for the __ASMConfig__ object.
type InheritedASMConfig struct {
	AsmEnableBlock       *InheritedAsmEnableBlock    `json:"asm_enable_block,omitempty"`
	AsmGrowthBlock       *InheritedAsmGrowthBlock    `json:"asm_growth_block,omitempty"`
	AsmThreshold         *InheritanceInheritedUInt32 `json:"asm_threshold,omitempty"`
	ForecastPeriod       *InheritanceInheritedUInt32 `json:"forecast_period,omitempty"`
	History              *InheritanceInheritedUInt32 `json:"history,omitempty"`
	MinTotal             *InheritanceInheritedUInt32 `json:"min_total,omitempty"`
	MinUnused            *InheritanceInheritedUInt32 `json:"min_unused,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InheritedASMConfig InheritedASMConfig

// NewInheritedASMConfig instantiates a new InheritedASMConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInheritedASMConfig() *InheritedASMConfig {
	this := InheritedASMConfig{}
	return &this
}

// NewInheritedASMConfigWithDefaults instantiates a new InheritedASMConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInheritedASMConfigWithDefaults() *InheritedASMConfig {
	this := InheritedASMConfig{}
	return &this
}

// GetAsmEnableBlock returns the AsmEnableBlock field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetAsmEnableBlock() InheritedAsmEnableBlock {
	if o == nil || IsNil(o.AsmEnableBlock) {
		var ret InheritedAsmEnableBlock
		return ret
	}
	return *o.AsmEnableBlock
}

// GetAsmEnableBlockOk returns a tuple with the AsmEnableBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetAsmEnableBlockOk() (*InheritedAsmEnableBlock, bool) {
	if o == nil || IsNil(o.AsmEnableBlock) {
		return nil, false
	}
	return o.AsmEnableBlock, true
}

// HasAsmEnableBlock returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasAsmEnableBlock() bool {
	if o != nil && !IsNil(o.AsmEnableBlock) {
		return true
	}

	return false
}

// SetAsmEnableBlock gets a reference to the given InheritedAsmEnableBlock and assigns it to the AsmEnableBlock field.
func (o *InheritedASMConfig) SetAsmEnableBlock(v InheritedAsmEnableBlock) {
	o.AsmEnableBlock = &v
}

// GetAsmGrowthBlock returns the AsmGrowthBlock field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetAsmGrowthBlock() InheritedAsmGrowthBlock {
	if o == nil || IsNil(o.AsmGrowthBlock) {
		var ret InheritedAsmGrowthBlock
		return ret
	}
	return *o.AsmGrowthBlock
}

// GetAsmGrowthBlockOk returns a tuple with the AsmGrowthBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetAsmGrowthBlockOk() (*InheritedAsmGrowthBlock, bool) {
	if o == nil || IsNil(o.AsmGrowthBlock) {
		return nil, false
	}
	return o.AsmGrowthBlock, true
}

// HasAsmGrowthBlock returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasAsmGrowthBlock() bool {
	if o != nil && !IsNil(o.AsmGrowthBlock) {
		return true
	}

	return false
}

// SetAsmGrowthBlock gets a reference to the given InheritedAsmGrowthBlock and assigns it to the AsmGrowthBlock field.
func (o *InheritedASMConfig) SetAsmGrowthBlock(v InheritedAsmGrowthBlock) {
	o.AsmGrowthBlock = &v
}

// GetAsmThreshold returns the AsmThreshold field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetAsmThreshold() InheritanceInheritedUInt32 {
	if o == nil || IsNil(o.AsmThreshold) {
		var ret InheritanceInheritedUInt32
		return ret
	}
	return *o.AsmThreshold
}

// GetAsmThresholdOk returns a tuple with the AsmThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetAsmThresholdOk() (*InheritanceInheritedUInt32, bool) {
	if o == nil || IsNil(o.AsmThreshold) {
		return nil, false
	}
	return o.AsmThreshold, true
}

// HasAsmThreshold returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasAsmThreshold() bool {
	if o != nil && !IsNil(o.AsmThreshold) {
		return true
	}

	return false
}

// SetAsmThreshold gets a reference to the given InheritanceInheritedUInt32 and assigns it to the AsmThreshold field.
func (o *InheritedASMConfig) SetAsmThreshold(v InheritanceInheritedUInt32) {
	o.AsmThreshold = &v
}

// GetForecastPeriod returns the ForecastPeriod field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetForecastPeriod() InheritanceInheritedUInt32 {
	if o == nil || IsNil(o.ForecastPeriod) {
		var ret InheritanceInheritedUInt32
		return ret
	}
	return *o.ForecastPeriod
}

// GetForecastPeriodOk returns a tuple with the ForecastPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetForecastPeriodOk() (*InheritanceInheritedUInt32, bool) {
	if o == nil || IsNil(o.ForecastPeriod) {
		return nil, false
	}
	return o.ForecastPeriod, true
}

// HasForecastPeriod returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasForecastPeriod() bool {
	if o != nil && !IsNil(o.ForecastPeriod) {
		return true
	}

	return false
}

// SetForecastPeriod gets a reference to the given InheritanceInheritedUInt32 and assigns it to the ForecastPeriod field.
func (o *InheritedASMConfig) SetForecastPeriod(v InheritanceInheritedUInt32) {
	o.ForecastPeriod = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetHistory() InheritanceInheritedUInt32 {
	if o == nil || IsNil(o.History) {
		var ret InheritanceInheritedUInt32
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetHistoryOk() (*InheritanceInheritedUInt32, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given InheritanceInheritedUInt32 and assigns it to the History field.
func (o *InheritedASMConfig) SetHistory(v InheritanceInheritedUInt32) {
	o.History = &v
}

// GetMinTotal returns the MinTotal field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetMinTotal() InheritanceInheritedUInt32 {
	if o == nil || IsNil(o.MinTotal) {
		var ret InheritanceInheritedUInt32
		return ret
	}
	return *o.MinTotal
}

// GetMinTotalOk returns a tuple with the MinTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetMinTotalOk() (*InheritanceInheritedUInt32, bool) {
	if o == nil || IsNil(o.MinTotal) {
		return nil, false
	}
	return o.MinTotal, true
}

// HasMinTotal returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasMinTotal() bool {
	if o != nil && !IsNil(o.MinTotal) {
		return true
	}

	return false
}

// SetMinTotal gets a reference to the given InheritanceInheritedUInt32 and assigns it to the MinTotal field.
func (o *InheritedASMConfig) SetMinTotal(v InheritanceInheritedUInt32) {
	o.MinTotal = &v
}

// GetMinUnused returns the MinUnused field value if set, zero value otherwise.
func (o *InheritedASMConfig) GetMinUnused() InheritanceInheritedUInt32 {
	if o == nil || IsNil(o.MinUnused) {
		var ret InheritanceInheritedUInt32
		return ret
	}
	return *o.MinUnused
}

// GetMinUnusedOk returns a tuple with the MinUnused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InheritedASMConfig) GetMinUnusedOk() (*InheritanceInheritedUInt32, bool) {
	if o == nil || IsNil(o.MinUnused) {
		return nil, false
	}
	return o.MinUnused, true
}

// HasMinUnused returns a boolean if a field has been set.
func (o *InheritedASMConfig) HasMinUnused() bool {
	if o != nil && !IsNil(o.MinUnused) {
		return true
	}

	return false
}

// SetMinUnused gets a reference to the given InheritanceInheritedUInt32 and assigns it to the MinUnused field.
func (o *InheritedASMConfig) SetMinUnused(v InheritanceInheritedUInt32) {
	o.MinUnused = &v
}

func (o InheritedASMConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InheritedASMConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsmEnableBlock) {
		toSerialize["asm_enable_block"] = o.AsmEnableBlock
	}
	if !IsNil(o.AsmGrowthBlock) {
		toSerialize["asm_growth_block"] = o.AsmGrowthBlock
	}
	if !IsNil(o.AsmThreshold) {
		toSerialize["asm_threshold"] = o.AsmThreshold
	}
	if !IsNil(o.ForecastPeriod) {
		toSerialize["forecast_period"] = o.ForecastPeriod
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.MinTotal) {
		toSerialize["min_total"] = o.MinTotal
	}
	if !IsNil(o.MinUnused) {
		toSerialize["min_unused"] = o.MinUnused
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InheritedASMConfig) UnmarshalJSON(data []byte) (err error) {
	varInheritedASMConfig := _InheritedASMConfig{}

	err = json.Unmarshal(data, &varInheritedASMConfig)

	if err != nil {
		return err
	}

	*o = InheritedASMConfig(varInheritedASMConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "asm_enable_block")
		delete(additionalProperties, "asm_growth_block")
		delete(additionalProperties, "asm_threshold")
		delete(additionalProperties, "forecast_period")
		delete(additionalProperties, "history")
		delete(additionalProperties, "min_total")
		delete(additionalProperties, "min_unused")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInheritedASMConfig struct {
	value *InheritedASMConfig
	isSet bool
}

func (v NullableInheritedASMConfig) Get() *InheritedASMConfig {
	return v.value
}

func (v *NullableInheritedASMConfig) Set(val *InheritedASMConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableInheritedASMConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableInheritedASMConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInheritedASMConfig(val *InheritedASMConfig) *NullableInheritedASMConfig {
	return &NullableInheritedASMConfig{value: val, isSet: true}
}

func (v NullableInheritedASMConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInheritedASMConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
