/*
IP Address Management API

The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipam

import (
	"encoding/json"
)

// checks if the IpamsvcHostAssociatedServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpamsvcHostAssociatedServer{}

// IpamsvcHostAssociatedServer struct for IpamsvcHostAssociatedServer
type IpamsvcHostAssociatedServer struct {
	// The resource identifier.
	Id *string `json:"id,omitempty"`
	// The DHCP Config Profile name.
	Name *string `json:"name,omitempty"`
}

// NewIpamsvcHostAssociatedServer instantiates a new IpamsvcHostAssociatedServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpamsvcHostAssociatedServer() *IpamsvcHostAssociatedServer {
	this := IpamsvcHostAssociatedServer{}
	return &this
}

// NewIpamsvcHostAssociatedServerWithDefaults instantiates a new IpamsvcHostAssociatedServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpamsvcHostAssociatedServerWithDefaults() *IpamsvcHostAssociatedServer {
	this := IpamsvcHostAssociatedServer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IpamsvcHostAssociatedServer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcHostAssociatedServer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IpamsvcHostAssociatedServer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IpamsvcHostAssociatedServer) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IpamsvcHostAssociatedServer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpamsvcHostAssociatedServer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IpamsvcHostAssociatedServer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IpamsvcHostAssociatedServer) SetName(v string) {
	o.Name = &v
}

func (o IpamsvcHostAssociatedServer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpamsvcHostAssociatedServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableIpamsvcHostAssociatedServer struct {
	value *IpamsvcHostAssociatedServer
	isSet bool
}

func (v NullableIpamsvcHostAssociatedServer) Get() *IpamsvcHostAssociatedServer {
	return v.value
}

func (v *NullableIpamsvcHostAssociatedServer) Set(val *IpamsvcHostAssociatedServer) {
	v.value = val
	v.isSet = true
}

func (v NullableIpamsvcHostAssociatedServer) IsSet() bool {
	return v.isSet
}

func (v *NullableIpamsvcHostAssociatedServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpamsvcHostAssociatedServer(val *IpamsvcHostAssociatedServer) *NullableIpamsvcHostAssociatedServer {
	return &NullableIpamsvcHostAssociatedServer{value: val, isSet: true}
}

func (v NullableIpamsvcHostAssociatedServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpamsvcHostAssociatedServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
