/*
Host Activation Service

Host activation service provides a RESTful interface to manage cert and join token object. Join tokens are essentially a password that allows on-prem hosts to auto-associate themselves to a customer's account and receive a signed cert.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infra_provision

import (
	"encoding/json"
	"time"
)

// checks if the HostactivationCSR type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostactivationCSR{}

// HostactivationCSR Represents a certificate signing request from an on-prem host.
type HostactivationCSR struct {
	ActivationCode *string         `json:"activation_code,omitempty"`
	ClientIp       *TypesInetValue `json:"client_ip,omitempty"`
	CreatedAt      *time.Time      `json:"created_at,omitempty"`
	Csr            *string         `json:"csr,omitempty"`
	HostSerial     *string         `json:"host_serial,omitempty"`
	// The resource identifier.
	Id        *string                  `json:"id,omitempty"`
	JoinToken *HostactivationJoinToken `json:"join_token,omitempty"`
	Ophid     *string                  `json:"ophid,omitempty"`
	Signature *string                  `json:"signature,omitempty"`
	SrcIp     *TypesInetValue          `json:"src_ip,omitempty"`
	State     *HostactivationCSRState  `json:"state,omitempty"`
	UpdatedAt *time.Time               `json:"updated_at,omitempty"`
}

// NewHostactivationCSR instantiates a new HostactivationCSR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostactivationCSR() *HostactivationCSR {
	this := HostactivationCSR{}
	var state HostactivationCSRState = HOSTACTIVATIONCSRSTATE_UNKNOWN
	this.State = &state
	return &this
}

// NewHostactivationCSRWithDefaults instantiates a new HostactivationCSR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostactivationCSRWithDefaults() *HostactivationCSR {
	this := HostactivationCSR{}
	var state HostactivationCSRState = HOSTACTIVATIONCSRSTATE_UNKNOWN
	this.State = &state
	return &this
}

// GetActivationCode returns the ActivationCode field value if set, zero value otherwise.
func (o *HostactivationCSR) GetActivationCode() string {
	if o == nil || IsNil(o.ActivationCode) {
		var ret string
		return ret
	}
	return *o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetActivationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return o.ActivationCode, true
}

// HasActivationCode returns a boolean if a field has been set.
func (o *HostactivationCSR) HasActivationCode() bool {
	if o != nil && !IsNil(o.ActivationCode) {
		return true
	}

	return false
}

// SetActivationCode gets a reference to the given string and assigns it to the ActivationCode field.
func (o *HostactivationCSR) SetActivationCode(v string) {
	o.ActivationCode = &v
}

// GetClientIp returns the ClientIp field value if set, zero value otherwise.
func (o *HostactivationCSR) GetClientIp() TypesInetValue {
	if o == nil || IsNil(o.ClientIp) {
		var ret TypesInetValue
		return ret
	}
	return *o.ClientIp
}

// GetClientIpOk returns a tuple with the ClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetClientIpOk() (*TypesInetValue, bool) {
	if o == nil || IsNil(o.ClientIp) {
		return nil, false
	}
	return o.ClientIp, true
}

// HasClientIp returns a boolean if a field has been set.
func (o *HostactivationCSR) HasClientIp() bool {
	if o != nil && !IsNil(o.ClientIp) {
		return true
	}

	return false
}

// SetClientIp gets a reference to the given TypesInetValue and assigns it to the ClientIp field.
func (o *HostactivationCSR) SetClientIp(v TypesInetValue) {
	o.ClientIp = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *HostactivationCSR) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *HostactivationCSR) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *HostactivationCSR) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCsr returns the Csr field value if set, zero value otherwise.
func (o *HostactivationCSR) GetCsr() string {
	if o == nil || IsNil(o.Csr) {
		var ret string
		return ret
	}
	return *o.Csr
}

// GetCsrOk returns a tuple with the Csr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetCsrOk() (*string, bool) {
	if o == nil || IsNil(o.Csr) {
		return nil, false
	}
	return o.Csr, true
}

// HasCsr returns a boolean if a field has been set.
func (o *HostactivationCSR) HasCsr() bool {
	if o != nil && !IsNil(o.Csr) {
		return true
	}

	return false
}

// SetCsr gets a reference to the given string and assigns it to the Csr field.
func (o *HostactivationCSR) SetCsr(v string) {
	o.Csr = &v
}

// GetHostSerial returns the HostSerial field value if set, zero value otherwise.
func (o *HostactivationCSR) GetHostSerial() string {
	if o == nil || IsNil(o.HostSerial) {
		var ret string
		return ret
	}
	return *o.HostSerial
}

// GetHostSerialOk returns a tuple with the HostSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetHostSerialOk() (*string, bool) {
	if o == nil || IsNil(o.HostSerial) {
		return nil, false
	}
	return o.HostSerial, true
}

// HasHostSerial returns a boolean if a field has been set.
func (o *HostactivationCSR) HasHostSerial() bool {
	if o != nil && !IsNil(o.HostSerial) {
		return true
	}

	return false
}

// SetHostSerial gets a reference to the given string and assigns it to the HostSerial field.
func (o *HostactivationCSR) SetHostSerial(v string) {
	o.HostSerial = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostactivationCSR) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostactivationCSR) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HostactivationCSR) SetId(v string) {
	o.Id = &v
}

// GetJoinToken returns the JoinToken field value if set, zero value otherwise.
func (o *HostactivationCSR) GetJoinToken() HostactivationJoinToken {
	if o == nil || IsNil(o.JoinToken) {
		var ret HostactivationJoinToken
		return ret
	}
	return *o.JoinToken
}

// GetJoinTokenOk returns a tuple with the JoinToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetJoinTokenOk() (*HostactivationJoinToken, bool) {
	if o == nil || IsNil(o.JoinToken) {
		return nil, false
	}
	return o.JoinToken, true
}

// HasJoinToken returns a boolean if a field has been set.
func (o *HostactivationCSR) HasJoinToken() bool {
	if o != nil && !IsNil(o.JoinToken) {
		return true
	}

	return false
}

// SetJoinToken gets a reference to the given HostactivationJoinToken and assigns it to the JoinToken field.
func (o *HostactivationCSR) SetJoinToken(v HostactivationJoinToken) {
	o.JoinToken = &v
}

// GetOphid returns the Ophid field value if set, zero value otherwise.
func (o *HostactivationCSR) GetOphid() string {
	if o == nil || IsNil(o.Ophid) {
		var ret string
		return ret
	}
	return *o.Ophid
}

// GetOphidOk returns a tuple with the Ophid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetOphidOk() (*string, bool) {
	if o == nil || IsNil(o.Ophid) {
		return nil, false
	}
	return o.Ophid, true
}

// HasOphid returns a boolean if a field has been set.
func (o *HostactivationCSR) HasOphid() bool {
	if o != nil && !IsNil(o.Ophid) {
		return true
	}

	return false
}

// SetOphid gets a reference to the given string and assigns it to the Ophid field.
func (o *HostactivationCSR) SetOphid(v string) {
	o.Ophid = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *HostactivationCSR) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *HostactivationCSR) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *HostactivationCSR) SetSignature(v string) {
	o.Signature = &v
}

// GetSrcIp returns the SrcIp field value if set, zero value otherwise.
func (o *HostactivationCSR) GetSrcIp() TypesInetValue {
	if o == nil || IsNil(o.SrcIp) {
		var ret TypesInetValue
		return ret
	}
	return *o.SrcIp
}

// GetSrcIpOk returns a tuple with the SrcIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetSrcIpOk() (*TypesInetValue, bool) {
	if o == nil || IsNil(o.SrcIp) {
		return nil, false
	}
	return o.SrcIp, true
}

// HasSrcIp returns a boolean if a field has been set.
func (o *HostactivationCSR) HasSrcIp() bool {
	if o != nil && !IsNil(o.SrcIp) {
		return true
	}

	return false
}

// SetSrcIp gets a reference to the given TypesInetValue and assigns it to the SrcIp field.
func (o *HostactivationCSR) SetSrcIp(v TypesInetValue) {
	o.SrcIp = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *HostactivationCSR) GetState() HostactivationCSRState {
	if o == nil || IsNil(o.State) {
		var ret HostactivationCSRState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetStateOk() (*HostactivationCSRState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *HostactivationCSR) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given HostactivationCSRState and assigns it to the State field.
func (o *HostactivationCSR) SetState(v HostactivationCSRState) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *HostactivationCSR) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostactivationCSR) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *HostactivationCSR) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *HostactivationCSR) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o HostactivationCSR) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostactivationCSR) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationCode) {
		toSerialize["activation_code"] = o.ActivationCode
	}
	if !IsNil(o.ClientIp) {
		toSerialize["client_ip"] = o.ClientIp
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Csr) {
		toSerialize["csr"] = o.Csr
	}
	if !IsNil(o.HostSerial) {
		toSerialize["host_serial"] = o.HostSerial
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.JoinToken) {
		toSerialize["join_token"] = o.JoinToken
	}
	if !IsNil(o.Ophid) {
		toSerialize["ophid"] = o.Ophid
	}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.SrcIp) {
		toSerialize["src_ip"] = o.SrcIp
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableHostactivationCSR struct {
	value *HostactivationCSR
	isSet bool
}

func (v NullableHostactivationCSR) Get() *HostactivationCSR {
	return v.value
}

func (v *NullableHostactivationCSR) Set(val *HostactivationCSR) {
	v.value = val
	v.isSet = true
}

func (v NullableHostactivationCSR) IsSet() bool {
	return v.isSet
}

func (v *NullableHostactivationCSR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostactivationCSR(val *HostactivationCSR) *NullableHostactivationCSR {
	return &NullableHostactivationCSR{value: val, isSet: true}
}

func (v NullableHostactivationCSR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostactivationCSR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
