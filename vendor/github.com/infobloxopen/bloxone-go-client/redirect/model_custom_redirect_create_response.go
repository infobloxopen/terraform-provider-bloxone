/*
BloxOne Redirect API

You can configure BloxOne Threat Defense Cloud to redirect traffic to the Infoblox server that displays the default or customized redirect page. You can redirect traffic to a custom destination using custom redirects.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redirect

import (
	"encoding/json"
)

// checks if the CustomRedirectCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomRedirectCreateResponse{}

// CustomRedirectCreateResponse The Custom Redirect create response.
type CustomRedirectCreateResponse struct {
	Results              *CustomRedirect `json:"results,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomRedirectCreateResponse CustomRedirectCreateResponse

// NewCustomRedirectCreateResponse instantiates a new CustomRedirectCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomRedirectCreateResponse() *CustomRedirectCreateResponse {
	this := CustomRedirectCreateResponse{}
	return &this
}

// NewCustomRedirectCreateResponseWithDefaults instantiates a new CustomRedirectCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomRedirectCreateResponseWithDefaults() *CustomRedirectCreateResponse {
	this := CustomRedirectCreateResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *CustomRedirectCreateResponse) GetResults() CustomRedirect {
	if o == nil || IsNil(o.Results) {
		var ret CustomRedirect
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomRedirectCreateResponse) GetResultsOk() (*CustomRedirect, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *CustomRedirectCreateResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given CustomRedirect and assigns it to the Results field.
func (o *CustomRedirectCreateResponse) SetResults(v CustomRedirect) {
	o.Results = &v
}

func (o CustomRedirectCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomRedirectCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomRedirectCreateResponse) UnmarshalJSON(data []byte) (err error) {
	varCustomRedirectCreateResponse := _CustomRedirectCreateResponse{}

	err = json.Unmarshal(data, &varCustomRedirectCreateResponse)

	if err != nil {
		return err
	}

	*o = CustomRedirectCreateResponse(varCustomRedirectCreateResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomRedirectCreateResponse struct {
	value *CustomRedirectCreateResponse
	isSet bool
}

func (v NullableCustomRedirectCreateResponse) Get() *CustomRedirectCreateResponse {
	return v.value
}

func (v *NullableCustomRedirectCreateResponse) Set(val *CustomRedirectCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomRedirectCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomRedirectCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomRedirectCreateResponse(val *CustomRedirectCreateResponse) *NullableCustomRedirectCreateResponse {
	return &NullableCustomRedirectCreateResponse{value: val, isSet: true}
}

func (v NullableCustomRedirectCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomRedirectCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
