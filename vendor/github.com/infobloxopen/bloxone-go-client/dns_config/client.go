/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns_config

import (
	"github.com/infobloxopen/bloxone-go-client/internal"
)

var ServiceBasePath = "/api/ddi/v1"

// APIClient manages communication with the DNS Configuration API API vv1
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	*internal.APIClient

	// API Services
	AclAPI               AclAPI
	AuthNsgAPI           AuthNsgAPI
	AuthZoneAPI          AuthZoneAPI
	CacheFlushAPI        CacheFlushAPI
	ConvertDomainNameAPI ConvertDomainNameAPI
	ConvertRnameAPI      ConvertRnameAPI
	DelegationAPI        DelegationAPI
	ForwardNsgAPI        ForwardNsgAPI
	ForwardZoneAPI       ForwardZoneAPI
	GlobalAPI            GlobalAPI
	HostAPI              HostAPI
	LbdnAPI              LbdnAPI
	ServerAPI            ServerAPI
	ViewAPI              ViewAPI
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *internal.Configuration) *APIClient {
	c := &APIClient{}
	c.APIClient = internal.NewAPIClient(cfg)

	// API Services
	c.AclAPI = (*AclAPIService)(&c.Common)
	c.AuthNsgAPI = (*AuthNsgAPIService)(&c.Common)
	c.AuthZoneAPI = (*AuthZoneAPIService)(&c.Common)
	c.CacheFlushAPI = (*CacheFlushAPIService)(&c.Common)
	c.ConvertDomainNameAPI = (*ConvertDomainNameAPIService)(&c.Common)
	c.ConvertRnameAPI = (*ConvertRnameAPIService)(&c.Common)
	c.DelegationAPI = (*DelegationAPIService)(&c.Common)
	c.ForwardNsgAPI = (*ForwardNsgAPIService)(&c.Common)
	c.ForwardZoneAPI = (*ForwardZoneAPIService)(&c.Common)
	c.GlobalAPI = (*GlobalAPIService)(&c.Common)
	c.HostAPI = (*HostAPIService)(&c.Common)
	c.LbdnAPI = (*LbdnAPIService)(&c.Common)
	c.ServerAPI = (*ServerAPIService)(&c.Common)
	c.ViewAPI = (*ViewAPIService)(&c.Common)

	return c
}
