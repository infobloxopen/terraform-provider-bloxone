/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns_config

import (
	"encoding/json"
)

// checks if the ConfigBulkCopyError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigBulkCopyError{}

// ConfigBulkCopyError struct for ConfigBulkCopyError
type ConfigBulkCopyError struct {
	// The description of the resource that was requested to be copied.
	Description *string `json:"description,omitempty"`
	// The resource identifier.
	Id *string `json:"id,omitempty"`
	// The reason why the copy failed.
	Message *string `json:"message,omitempty"`
}

// NewConfigBulkCopyError instantiates a new ConfigBulkCopyError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigBulkCopyError() *ConfigBulkCopyError {
	this := ConfigBulkCopyError{}
	return &this
}

// NewConfigBulkCopyErrorWithDefaults instantiates a new ConfigBulkCopyError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigBulkCopyErrorWithDefaults() *ConfigBulkCopyError {
	this := ConfigBulkCopyError{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigBulkCopyError) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyError) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigBulkCopyError) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigBulkCopyError) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConfigBulkCopyError) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyError) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConfigBulkCopyError) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConfigBulkCopyError) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ConfigBulkCopyError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ConfigBulkCopyError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ConfigBulkCopyError) SetMessage(v string) {
	o.Message = &v
}

func (o ConfigBulkCopyError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigBulkCopyError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableConfigBulkCopyError struct {
	value *ConfigBulkCopyError
	isSet bool
}

func (v NullableConfigBulkCopyError) Get() *ConfigBulkCopyError {
	return v.value
}

func (v *NullableConfigBulkCopyError) Set(val *ConfigBulkCopyError) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigBulkCopyError) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigBulkCopyError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigBulkCopyError(val *ConfigBulkCopyError) *NullableConfigBulkCopyError {
	return &NullableConfigBulkCopyError{value: val, isSet: true}
}

func (v NullableConfigBulkCopyError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigBulkCopyError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
