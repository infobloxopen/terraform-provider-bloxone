/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns_config

import (
	"encoding/json"
)

// checks if the ConfigCopyForwardZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigCopyForwardZone{}

// ConfigCopyForwardZone struct for ConfigCopyForwardZone
type ConfigCopyForwardZone struct {
	// A comment of the (copied) _dns/forward_zone_ object.
	Comment *string `json:"comment,omitempty"`
	// Optional. External DNS servers to forward to. Order is not significant.
	ExternalForwarders []ConfigForwarder `json:"external_forwarders,omitempty"`
	// The resource identifier.
	Hosts []string `json:"hosts,omitempty"`
	// The resource identifier.
	Id *string `json:"id,omitempty"`
	// The resource identifier.
	InternalForwarders []string `json:"internal_forwarders,omitempty"`
	// The resource identifier.
	Nsgs []string `json:"nsgs,omitempty"`
	// Indicates whether child objects should be copied or not.  Defaults to _false_. Reserved for future use.
	Recursive *bool `json:"recursive,omitempty"`
	// Indicates whether copying should skip object in case of error and continue with next, or abort copying in case of error.  Defaults to _false_.
	SkipOnError *bool `json:"skip_on_error,omitempty"`
	// The resource identifier.
	TargetView string `json:"target_view"`
}

// NewConfigCopyForwardZone instantiates a new ConfigCopyForwardZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigCopyForwardZone(targetView string) *ConfigCopyForwardZone {
	this := ConfigCopyForwardZone{}
	this.TargetView = targetView
	return &this
}

// NewConfigCopyForwardZoneWithDefaults instantiates a new ConfigCopyForwardZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigCopyForwardZoneWithDefaults() *ConfigCopyForwardZone {
	this := ConfigCopyForwardZone{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ConfigCopyForwardZone) SetComment(v string) {
	o.Comment = &v
}

// GetExternalForwarders returns the ExternalForwarders field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetExternalForwarders() []ConfigForwarder {
	if o == nil || IsNil(o.ExternalForwarders) {
		var ret []ConfigForwarder
		return ret
	}
	return o.ExternalForwarders
}

// GetExternalForwardersOk returns a tuple with the ExternalForwarders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetExternalForwardersOk() ([]ConfigForwarder, bool) {
	if o == nil || IsNil(o.ExternalForwarders) {
		return nil, false
	}
	return o.ExternalForwarders, true
}

// HasExternalForwarders returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasExternalForwarders() bool {
	if o != nil && !IsNil(o.ExternalForwarders) {
		return true
	}

	return false
}

// SetExternalForwarders gets a reference to the given []ConfigForwarder and assigns it to the ExternalForwarders field.
func (o *ConfigCopyForwardZone) SetExternalForwarders(v []ConfigForwarder) {
	o.ExternalForwarders = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetHosts() []string {
	if o == nil || IsNil(o.Hosts) {
		var ret []string
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *ConfigCopyForwardZone) SetHosts(v []string) {
	o.Hosts = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConfigCopyForwardZone) SetId(v string) {
	o.Id = &v
}

// GetInternalForwarders returns the InternalForwarders field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetInternalForwarders() []string {
	if o == nil || IsNil(o.InternalForwarders) {
		var ret []string
		return ret
	}
	return o.InternalForwarders
}

// GetInternalForwardersOk returns a tuple with the InternalForwarders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetInternalForwardersOk() ([]string, bool) {
	if o == nil || IsNil(o.InternalForwarders) {
		return nil, false
	}
	return o.InternalForwarders, true
}

// HasInternalForwarders returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasInternalForwarders() bool {
	if o != nil && !IsNil(o.InternalForwarders) {
		return true
	}

	return false
}

// SetInternalForwarders gets a reference to the given []string and assigns it to the InternalForwarders field.
func (o *ConfigCopyForwardZone) SetInternalForwarders(v []string) {
	o.InternalForwarders = v
}

// GetNsgs returns the Nsgs field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetNsgs() []string {
	if o == nil || IsNil(o.Nsgs) {
		var ret []string
		return ret
	}
	return o.Nsgs
}

// GetNsgsOk returns a tuple with the Nsgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetNsgsOk() ([]string, bool) {
	if o == nil || IsNil(o.Nsgs) {
		return nil, false
	}
	return o.Nsgs, true
}

// HasNsgs returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasNsgs() bool {
	if o != nil && !IsNil(o.Nsgs) {
		return true
	}

	return false
}

// SetNsgs gets a reference to the given []string and assigns it to the Nsgs field.
func (o *ConfigCopyForwardZone) SetNsgs(v []string) {
	o.Nsgs = v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetRecursive() bool {
	if o == nil || IsNil(o.Recursive) {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetRecursiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Recursive) {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasRecursive() bool {
	if o != nil && !IsNil(o.Recursive) {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *ConfigCopyForwardZone) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetSkipOnError returns the SkipOnError field value if set, zero value otherwise.
func (o *ConfigCopyForwardZone) GetSkipOnError() bool {
	if o == nil || IsNil(o.SkipOnError) {
		var ret bool
		return ret
	}
	return *o.SkipOnError
}

// GetSkipOnErrorOk returns a tuple with the SkipOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetSkipOnErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOnError) {
		return nil, false
	}
	return o.SkipOnError, true
}

// HasSkipOnError returns a boolean if a field has been set.
func (o *ConfigCopyForwardZone) HasSkipOnError() bool {
	if o != nil && !IsNil(o.SkipOnError) {
		return true
	}

	return false
}

// SetSkipOnError gets a reference to the given bool and assigns it to the SkipOnError field.
func (o *ConfigCopyForwardZone) SetSkipOnError(v bool) {
	o.SkipOnError = &v
}

// GetTargetView returns the TargetView field value
func (o *ConfigCopyForwardZone) GetTargetView() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetView
}

// GetTargetViewOk returns a tuple with the TargetView field value
// and a boolean to check if the value has been set.
func (o *ConfigCopyForwardZone) GetTargetViewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetView, true
}

// SetTargetView sets field value
func (o *ConfigCopyForwardZone) SetTargetView(v string) {
	o.TargetView = v
}

func (o ConfigCopyForwardZone) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigCopyForwardZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ExternalForwarders) {
		toSerialize["external_forwarders"] = o.ExternalForwarders
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InternalForwarders) {
		toSerialize["internal_forwarders"] = o.InternalForwarders
	}
	if !IsNil(o.Nsgs) {
		toSerialize["nsgs"] = o.Nsgs
	}
	if !IsNil(o.Recursive) {
		toSerialize["recursive"] = o.Recursive
	}
	if !IsNil(o.SkipOnError) {
		toSerialize["skip_on_error"] = o.SkipOnError
	}
	toSerialize["target_view"] = o.TargetView
	return toSerialize, nil
}

type NullableConfigCopyForwardZone struct {
	value *ConfigCopyForwardZone
	isSet bool
}

func (v NullableConfigCopyForwardZone) Get() *ConfigCopyForwardZone {
	return v.value
}

func (v *NullableConfigCopyForwardZone) Set(val *ConfigCopyForwardZone) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigCopyForwardZone) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigCopyForwardZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigCopyForwardZone(val *ConfigCopyForwardZone) *NullableConfigCopyForwardZone {
	return &NullableConfigCopyForwardZone{value: val, isSet: true}
}

func (v NullableConfigCopyForwardZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigCopyForwardZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
