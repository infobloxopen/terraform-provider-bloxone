/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns_config

import (
	"encoding/json"
)

// checks if the ConfigHostInheritance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigHostInheritance{}

// ConfigHostInheritance Inheritance configuration specifies how and which fields _Host_ object inherits from _Global_ or _Server_ parent.
type ConfigHostInheritance struct {
	KerberosKeys *ConfigInheritedKerberosKeys `json:"kerberos_keys,omitempty"`
}

// NewConfigHostInheritance instantiates a new ConfigHostInheritance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigHostInheritance() *ConfigHostInheritance {
	this := ConfigHostInheritance{}
	return &this
}

// NewConfigHostInheritanceWithDefaults instantiates a new ConfigHostInheritance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigHostInheritanceWithDefaults() *ConfigHostInheritance {
	this := ConfigHostInheritance{}
	return &this
}

// GetKerberosKeys returns the KerberosKeys field value if set, zero value otherwise.
func (o *ConfigHostInheritance) GetKerberosKeys() ConfigInheritedKerberosKeys {
	if o == nil || IsNil(o.KerberosKeys) {
		var ret ConfigInheritedKerberosKeys
		return ret
	}
	return *o.KerberosKeys
}

// GetKerberosKeysOk returns a tuple with the KerberosKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigHostInheritance) GetKerberosKeysOk() (*ConfigInheritedKerberosKeys, bool) {
	if o == nil || IsNil(o.KerberosKeys) {
		return nil, false
	}
	return o.KerberosKeys, true
}

// HasKerberosKeys returns a boolean if a field has been set.
func (o *ConfigHostInheritance) HasKerberosKeys() bool {
	if o != nil && !IsNil(o.KerberosKeys) {
		return true
	}

	return false
}

// SetKerberosKeys gets a reference to the given ConfigInheritedKerberosKeys and assigns it to the KerberosKeys field.
func (o *ConfigHostInheritance) SetKerberosKeys(v ConfigInheritedKerberosKeys) {
	o.KerberosKeys = &v
}

func (o ConfigHostInheritance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigHostInheritance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KerberosKeys) {
		toSerialize["kerberos_keys"] = o.KerberosKeys
	}
	return toSerialize, nil
}

type NullableConfigHostInheritance struct {
	value *ConfigHostInheritance
	isSet bool
}

func (v NullableConfigHostInheritance) Get() *ConfigHostInheritance {
	return v.value
}

func (v *NullableConfigHostInheritance) Set(val *ConfigHostInheritance) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigHostInheritance) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigHostInheritance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigHostInheritance(val *ConfigHostInheritance) *NullableConfigHostInheritance {
	return &NullableConfigHostInheritance{value: val, isSet: true}
}

func (v NullableConfigHostInheritance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigHostInheritance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
