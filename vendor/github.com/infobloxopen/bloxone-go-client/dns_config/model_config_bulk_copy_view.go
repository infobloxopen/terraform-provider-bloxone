/*
DNS Configuration API

The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns_config

import (
	"encoding/json"
)

// checks if the ConfigBulkCopyView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigBulkCopyView{}

// ConfigBulkCopyView struct for ConfigBulkCopyView
type ConfigBulkCopyView struct {
	AuthZoneConfig    *ConfigAuthZoneConfig    `json:"auth_zone_config,omitempty"`
	ForwardZoneConfig *ConfigForwardZoneConfig `json:"forward_zone_config,omitempty"`
	// Indicates whether child objects should be copied or not.  Defaults to _false_. Reserved for future use.
	Recursive *bool `json:"recursive,omitempty"`
	// The resource identifier.
	Resources           []string              `json:"resources"`
	SecondaryZoneConfig *ConfigAuthZoneConfig `json:"secondary_zone_config,omitempty"`
	// Indicates whether copying should skip object in case of error and continue with next, or abort copying in case of error.  Defaults to _false_.
	SkipOnError *bool `json:"skip_on_error,omitempty"`
	// The resource identifier.
	Target string `json:"target"`
}

// NewConfigBulkCopyView instantiates a new ConfigBulkCopyView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigBulkCopyView(resources []string, target string) *ConfigBulkCopyView {
	this := ConfigBulkCopyView{}
	this.Resources = resources
	this.Target = target
	return &this
}

// NewConfigBulkCopyViewWithDefaults instantiates a new ConfigBulkCopyView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigBulkCopyViewWithDefaults() *ConfigBulkCopyView {
	this := ConfigBulkCopyView{}
	return &this
}

// GetAuthZoneConfig returns the AuthZoneConfig field value if set, zero value otherwise.
func (o *ConfigBulkCopyView) GetAuthZoneConfig() ConfigAuthZoneConfig {
	if o == nil || IsNil(o.AuthZoneConfig) {
		var ret ConfigAuthZoneConfig
		return ret
	}
	return *o.AuthZoneConfig
}

// GetAuthZoneConfigOk returns a tuple with the AuthZoneConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetAuthZoneConfigOk() (*ConfigAuthZoneConfig, bool) {
	if o == nil || IsNil(o.AuthZoneConfig) {
		return nil, false
	}
	return o.AuthZoneConfig, true
}

// HasAuthZoneConfig returns a boolean if a field has been set.
func (o *ConfigBulkCopyView) HasAuthZoneConfig() bool {
	if o != nil && !IsNil(o.AuthZoneConfig) {
		return true
	}

	return false
}

// SetAuthZoneConfig gets a reference to the given ConfigAuthZoneConfig and assigns it to the AuthZoneConfig field.
func (o *ConfigBulkCopyView) SetAuthZoneConfig(v ConfigAuthZoneConfig) {
	o.AuthZoneConfig = &v
}

// GetForwardZoneConfig returns the ForwardZoneConfig field value if set, zero value otherwise.
func (o *ConfigBulkCopyView) GetForwardZoneConfig() ConfigForwardZoneConfig {
	if o == nil || IsNil(o.ForwardZoneConfig) {
		var ret ConfigForwardZoneConfig
		return ret
	}
	return *o.ForwardZoneConfig
}

// GetForwardZoneConfigOk returns a tuple with the ForwardZoneConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetForwardZoneConfigOk() (*ConfigForwardZoneConfig, bool) {
	if o == nil || IsNil(o.ForwardZoneConfig) {
		return nil, false
	}
	return o.ForwardZoneConfig, true
}

// HasForwardZoneConfig returns a boolean if a field has been set.
func (o *ConfigBulkCopyView) HasForwardZoneConfig() bool {
	if o != nil && !IsNil(o.ForwardZoneConfig) {
		return true
	}

	return false
}

// SetForwardZoneConfig gets a reference to the given ConfigForwardZoneConfig and assigns it to the ForwardZoneConfig field.
func (o *ConfigBulkCopyView) SetForwardZoneConfig(v ConfigForwardZoneConfig) {
	o.ForwardZoneConfig = &v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *ConfigBulkCopyView) GetRecursive() bool {
	if o == nil || IsNil(o.Recursive) {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetRecursiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Recursive) {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *ConfigBulkCopyView) HasRecursive() bool {
	if o != nil && !IsNil(o.Recursive) {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *ConfigBulkCopyView) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetResources returns the Resources field value
func (o *ConfigBulkCopyView) GetResources() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetResourcesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *ConfigBulkCopyView) SetResources(v []string) {
	o.Resources = v
}

// GetSecondaryZoneConfig returns the SecondaryZoneConfig field value if set, zero value otherwise.
func (o *ConfigBulkCopyView) GetSecondaryZoneConfig() ConfigAuthZoneConfig {
	if o == nil || IsNil(o.SecondaryZoneConfig) {
		var ret ConfigAuthZoneConfig
		return ret
	}
	return *o.SecondaryZoneConfig
}

// GetSecondaryZoneConfigOk returns a tuple with the SecondaryZoneConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetSecondaryZoneConfigOk() (*ConfigAuthZoneConfig, bool) {
	if o == nil || IsNil(o.SecondaryZoneConfig) {
		return nil, false
	}
	return o.SecondaryZoneConfig, true
}

// HasSecondaryZoneConfig returns a boolean if a field has been set.
func (o *ConfigBulkCopyView) HasSecondaryZoneConfig() bool {
	if o != nil && !IsNil(o.SecondaryZoneConfig) {
		return true
	}

	return false
}

// SetSecondaryZoneConfig gets a reference to the given ConfigAuthZoneConfig and assigns it to the SecondaryZoneConfig field.
func (o *ConfigBulkCopyView) SetSecondaryZoneConfig(v ConfigAuthZoneConfig) {
	o.SecondaryZoneConfig = &v
}

// GetSkipOnError returns the SkipOnError field value if set, zero value otherwise.
func (o *ConfigBulkCopyView) GetSkipOnError() bool {
	if o == nil || IsNil(o.SkipOnError) {
		var ret bool
		return ret
	}
	return *o.SkipOnError
}

// GetSkipOnErrorOk returns a tuple with the SkipOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetSkipOnErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOnError) {
		return nil, false
	}
	return o.SkipOnError, true
}

// HasSkipOnError returns a boolean if a field has been set.
func (o *ConfigBulkCopyView) HasSkipOnError() bool {
	if o != nil && !IsNil(o.SkipOnError) {
		return true
	}

	return false
}

// SetSkipOnError gets a reference to the given bool and assigns it to the SkipOnError field.
func (o *ConfigBulkCopyView) SetSkipOnError(v bool) {
	o.SkipOnError = &v
}

// GetTarget returns the Target field value
func (o *ConfigBulkCopyView) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *ConfigBulkCopyView) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *ConfigBulkCopyView) SetTarget(v string) {
	o.Target = v
}

func (o ConfigBulkCopyView) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigBulkCopyView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthZoneConfig) {
		toSerialize["auth_zone_config"] = o.AuthZoneConfig
	}
	if !IsNil(o.ForwardZoneConfig) {
		toSerialize["forward_zone_config"] = o.ForwardZoneConfig
	}
	if !IsNil(o.Recursive) {
		toSerialize["recursive"] = o.Recursive
	}
	toSerialize["resources"] = o.Resources
	if !IsNil(o.SecondaryZoneConfig) {
		toSerialize["secondary_zone_config"] = o.SecondaryZoneConfig
	}
	if !IsNil(o.SkipOnError) {
		toSerialize["skip_on_error"] = o.SkipOnError
	}
	toSerialize["target"] = o.Target
	return toSerialize, nil
}

type NullableConfigBulkCopyView struct {
	value *ConfigBulkCopyView
	isSet bool
}

func (v NullableConfigBulkCopyView) Get() *ConfigBulkCopyView {
	return v.value
}

func (v *NullableConfigBulkCopyView) Set(val *ConfigBulkCopyView) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigBulkCopyView) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigBulkCopyView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigBulkCopyView(val *ConfigBulkCopyView) *NullableConfigBulkCopyView {
	return &NullableConfigBulkCopyView{value: val, isSet: true}
}

func (v NullableConfigBulkCopyView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigBulkCopyView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
