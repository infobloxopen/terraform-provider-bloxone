/*
Discovery Configuration API V2

The Discovery configuration service is a BloxOne Service that provides configuration for accessing and syncing the Cloud assets   Base Paths:  1. provider: **_/api/cloud_discovery/v2/_**

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clouddiscovery

import (
	"encoding/json"
)

// checks if the AdditionalConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdditionalConfig{}

// AdditionalConfig struct for AdditionalConfig
type AdditionalConfig struct {
	ExcludedAccounts      []string    `json:"excluded_accounts,omitempty"`
	ForwardZoneEnabled    *bool       `json:"forward_zone_enabled,omitempty"`
	InternalRangesEnabled *bool       `json:"internal_ranges_enabled,omitempty"`
	ObjectType            *ObjectType `json:"object_type,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _AdditionalConfig AdditionalConfig

// NewAdditionalConfig instantiates a new AdditionalConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalConfig() *AdditionalConfig {
	this := AdditionalConfig{}
	return &this
}

// NewAdditionalConfigWithDefaults instantiates a new AdditionalConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalConfigWithDefaults() *AdditionalConfig {
	this := AdditionalConfig{}
	return &this
}

// GetExcludedAccounts returns the ExcludedAccounts field value if set, zero value otherwise.
func (o *AdditionalConfig) GetExcludedAccounts() []string {
	if o == nil || IsNil(o.ExcludedAccounts) {
		var ret []string
		return ret
	}
	return o.ExcludedAccounts
}

// GetExcludedAccountsOk returns a tuple with the ExcludedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalConfig) GetExcludedAccountsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedAccounts) {
		return nil, false
	}
	return o.ExcludedAccounts, true
}

// HasExcludedAccounts returns a boolean if a field has been set.
func (o *AdditionalConfig) HasExcludedAccounts() bool {
	if o != nil && !IsNil(o.ExcludedAccounts) {
		return true
	}

	return false
}

// SetExcludedAccounts gets a reference to the given []string and assigns it to the ExcludedAccounts field.
func (o *AdditionalConfig) SetExcludedAccounts(v []string) {
	o.ExcludedAccounts = v
}

// GetForwardZoneEnabled returns the ForwardZoneEnabled field value if set, zero value otherwise.
func (o *AdditionalConfig) GetForwardZoneEnabled() bool {
	if o == nil || IsNil(o.ForwardZoneEnabled) {
		var ret bool
		return ret
	}
	return *o.ForwardZoneEnabled
}

// GetForwardZoneEnabledOk returns a tuple with the ForwardZoneEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalConfig) GetForwardZoneEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ForwardZoneEnabled) {
		return nil, false
	}
	return o.ForwardZoneEnabled, true
}

// HasForwardZoneEnabled returns a boolean if a field has been set.
func (o *AdditionalConfig) HasForwardZoneEnabled() bool {
	if o != nil && !IsNil(o.ForwardZoneEnabled) {
		return true
	}

	return false
}

// SetForwardZoneEnabled gets a reference to the given bool and assigns it to the ForwardZoneEnabled field.
func (o *AdditionalConfig) SetForwardZoneEnabled(v bool) {
	o.ForwardZoneEnabled = &v
}

// GetInternalRangesEnabled returns the InternalRangesEnabled field value if set, zero value otherwise.
func (o *AdditionalConfig) GetInternalRangesEnabled() bool {
	if o == nil || IsNil(o.InternalRangesEnabled) {
		var ret bool
		return ret
	}
	return *o.InternalRangesEnabled
}

// GetInternalRangesEnabledOk returns a tuple with the InternalRangesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalConfig) GetInternalRangesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.InternalRangesEnabled) {
		return nil, false
	}
	return o.InternalRangesEnabled, true
}

// HasInternalRangesEnabled returns a boolean if a field has been set.
func (o *AdditionalConfig) HasInternalRangesEnabled() bool {
	if o != nil && !IsNil(o.InternalRangesEnabled) {
		return true
	}

	return false
}

// SetInternalRangesEnabled gets a reference to the given bool and assigns it to the InternalRangesEnabled field.
func (o *AdditionalConfig) SetInternalRangesEnabled(v bool) {
	o.InternalRangesEnabled = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *AdditionalConfig) GetObjectType() ObjectType {
	if o == nil || IsNil(o.ObjectType) {
		var ret ObjectType
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalConfig) GetObjectTypeOk() (*ObjectType, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *AdditionalConfig) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given ObjectType and assigns it to the ObjectType field.
func (o *AdditionalConfig) SetObjectType(v ObjectType) {
	o.ObjectType = &v
}

func (o AdditionalConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdditionalConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludedAccounts) {
		toSerialize["excluded_accounts"] = o.ExcludedAccounts
	}
	if !IsNil(o.ForwardZoneEnabled) {
		toSerialize["forward_zone_enabled"] = o.ForwardZoneEnabled
	}
	if !IsNil(o.InternalRangesEnabled) {
		toSerialize["internal_ranges_enabled"] = o.InternalRangesEnabled
	}
	if !IsNil(o.ObjectType) {
		toSerialize["object_type"] = o.ObjectType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdditionalConfig) UnmarshalJSON(data []byte) (err error) {
	varAdditionalConfig := _AdditionalConfig{}

	err = json.Unmarshal(data, &varAdditionalConfig)

	if err != nil {
		return err
	}

	*o = AdditionalConfig(varAdditionalConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "excluded_accounts")
		delete(additionalProperties, "forward_zone_enabled")
		delete(additionalProperties, "internal_ranges_enabled")
		delete(additionalProperties, "object_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdditionalConfig struct {
	value *AdditionalConfig
	isSet bool
}

func (v NullableAdditionalConfig) Get() *AdditionalConfig {
	return v.value
}

func (v *NullableAdditionalConfig) Set(val *AdditionalConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalConfig(val *AdditionalConfig) *NullableAdditionalConfig {
	return &NullableAdditionalConfig{value: val, isSet: true}
}

func (v NullableAdditionalConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
